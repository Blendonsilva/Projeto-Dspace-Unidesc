{"version":3,"sources":["webpack:///src/app/core/data/dso-redirect-data.service.ts","webpack:///src/app/lookup-by-id/lookup-guard.ts","webpack:///src/app/lookup-by-id/objectnotfound/themed-objectnotfound.component.ts","webpack:///src/app/shared/theme-support/themed.component.html","webpack:///src/app/lookup-by-id/lookup-by-id-routing.module.ts","webpack:///src/app/lookup-by-id/lookup-by-id.module.ts","webpack:///src/app/lookup-by-id/objectnotfound/objectnotfound.component.ts","webpack:///src/app/lookup-by-id/objectnotfound/objectnotfound.component.html","webpack:///src/themes lazy ^\\.\\/.*\\/app\\/lookup\\-by\\-id\\/objectnotfound\\/objectnotfound\\.component$ namespace object"],"names":["DsoRedirectDataService","constructor","requestService","rdbService","store","objectCache","halService","notificationsService","http","comparator","router","super","linkPath","uuidEndpoint","setLinkPath","identifierType","UUID","this","getIDHref","endpoint","resourceID","linksToFollow","buildHrefFromFindOptions","replace","findByIdAndIDType","id","findById","pipe","g","tap","response","hasSucceeded","dso","payload","uuid","newRoute","getEndpointFromDSOType","type","startsWith","navigate","dsoType","LookupGuard","dsoService","canActivate","route","state","params","getLookupParams","map","hasFailed","idType","HANDLE","ThemedObjectNotFoundComponent","getComponentName","importThemedComponent","themeName","importUnthemedComponent","LookupRoutingModule","forChild","matcher","urlMatcher","component","url","path","slice","us","join","consumed","posParams","LookupIdModule","ObjectNotFoundComponent","subscribe","ngOnInit","missingItem","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","keys","Object","module","exports"],"mappings":"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","file":"x","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { hasValue } from '../../shared/empty.util';\nimport { NotificationsService } from '../../shared/notifications/notifications.service';\nimport { FollowLinkConfig } from '../../shared/utils/follow-link-config.model';\nimport { RemoteDataBuildService } from '../cache/builders/remote-data-build.service';\nimport { ObjectCacheService } from '../cache/object-cache.service';\nimport { CoreState } from '../core.reducers';\nimport { HALEndpointService } from '../shared/hal-endpoint.service';\nimport { DataService } from './data.service';\nimport { DSOChangeAnalyzer } from './dso-change-analyzer.service';\nimport { RemoteData } from './remote-data';\nimport { IdentifierType } from './request.models';\nimport { RequestService } from './request.service';\nimport { getFirstCompletedRemoteData } from '../shared/operators';\nimport { DSpaceObject } from '../shared/dspace-object.model';\nimport { Item } from '../shared/item.model';\nimport { getItemPageRoute } from '../../item-page/item-page-routing-paths';\n\n@Injectable()\nexport class DsoRedirectDataService extends DataService<any> {\n\n  // Set the default link path to the identifier lookup endpoint.\n  protected linkPath = 'pid';\n  private uuidEndpoint = 'dso';\n\n  constructor(\n    protected requestService: RequestService,\n    protected rdbService: RemoteDataBuildService,\n    protected store: Store<CoreState>,\n    protected objectCache: ObjectCacheService,\n    protected halService: HALEndpointService,\n    protected notificationsService: NotificationsService,\n    protected http: HttpClient,\n    protected comparator: DSOChangeAnalyzer<any>,\n    private router: Router) {\n    super();\n  }\n\n  setLinkPath(identifierType: IdentifierType) {\n    // The default 'pid' endpoint for identifiers does not support uuid lookups.\n    // For uuid lookups we need to change the linkPath.\n    if (identifierType === IdentifierType.UUID) {\n      this.linkPath = this.uuidEndpoint;\n    }\n  }\n\n  getIDHref(endpoint, resourceID, ...linksToFollow: FollowLinkConfig<any>[]): string {\n    // Supporting both identifier (pid) and uuid (dso) endpoints\n    return this.buildHrefFromFindOptions( endpoint.replace(/\\{\\?id\\}/, `?id=${resourceID}`)\n        .replace(/\\{\\?uuid\\}/, `?uuid=${resourceID}`),\n      {}, [], ...linksToFollow);\n  }\n\n  findByIdAndIDType(id: string, identifierType = IdentifierType.UUID): Observable<RemoteData<DSpaceObject>> {\n    this.setLinkPath(identifierType);\n    return this.findById(id).pipe(\n      getFirstCompletedRemoteData(),\n      tap((response) => {\n        if (response.hasSucceeded) {\n          const dso = response.payload;\n          const uuid = dso.uuid;\n          if (hasValue(uuid)) {\n            let newRoute = this.getEndpointFromDSOType(response.payload.type);\n            if (dso.type.startsWith('item')) {\n              newRoute = getItemPageRoute(dso as Item);\n            } else if (hasValue(newRoute)) {\n              newRoute += '/' + uuid;\n            }\n            if (hasValue(newRoute)) {\n              this.router.navigate([newRoute]);\n            }\n          }\n        }\n      })\n    );\n  }\n  // Is there an existing method somewhere else that converts dso type to route?\n  getEndpointFromDSOType(dsoType: string): string {\n    // Are there other types to consider?\n    if (dsoType.startsWith('item')) {\n      return 'items';\n    } else if (dsoType.startsWith('community')) {\n      return 'communities';\n    } else if (dsoType.startsWith('collection')) {\n      return 'collections';\n    } else {\n      return '';\n    }\n  }\n}\n","import { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { IdentifierType } from '../core/data/request.models';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RemoteData } from '../core/data/remote-data';\nimport { DsoRedirectDataService } from '../core/data/dso-redirect-data.service';\nimport { DSpaceObject } from '../core/shared/dspace-object.model';\n\ninterface LookupParams {\n  type: IdentifierType;\n  id: string;\n}\n\n@Injectable()\nexport class LookupGuard implements CanActivate {\n\n  constructor(private dsoService: DsoRedirectDataService) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean>  {\n    const params = this.getLookupParams(route);\n    return this.dsoService.findByIdAndIDType(params.id, params.type).pipe(\n      map((response: RemoteData<DSpaceObject>) => response.hasFailed)\n    );\n  }\n\n  private getLookupParams(route: ActivatedRouteSnapshot): LookupParams {\n    let type;\n    let id;\n    const idType = route.params.idType;\n\n    // If the idType is not recognized, assume a legacy handle request (handle/prefix/id)\n    if (idType !== IdentifierType.HANDLE && idType !== IdentifierType.UUID) {\n      type = IdentifierType.HANDLE;\n      const prefix = route.params.idType;\n      const handleId = route.params.id;\n      id = `hdl:${prefix}/${handleId}`;\n\n    } else if (route.params.idType === IdentifierType.HANDLE) {\n      type = IdentifierType.HANDLE;\n      id = 'hdl:' + route.params.id;\n\n    } else {\n      type = IdentifierType.UUID;\n      id = route.params.id;\n    }\n    return {\n      type: type,\n      id: id\n    };\n  }\n}\n","import { Component } from '@angular/core';\nimport { ThemedComponent } from '../../shared/theme-support/themed.component';\nimport { ObjectNotFoundComponent } from './objectnotfound.component';\n\n/**\n * Themed wrapper for ObjectNotFoundComponent\n */\n@Component({\n  selector: 'ds-themed-objnotfound',\n  styleUrls: [],\n  templateUrl: '../../shared/theme-support/themed.component.html',\n})\nexport class ThemedObjectNotFoundComponent extends ThemedComponent<ObjectNotFoundComponent> {\n  protected getComponentName(): string {\n    return 'ObjectNotFoundComponent';\n  }\n\n  protected importThemedComponent(themeName: string): Promise<any> {\n    return import(`../../../themes/${themeName}/app/lookup-by-id/objectnotfound/objectnotfound.component`);\n  }\n\n  protected importUnthemedComponent(): Promise<any> {\n    return import(`./objectnotfound.component`);\n  }\n\n}\n","<ng-template #vcr></ng-template>\n","import { LookupGuard } from './lookup-guard';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, UrlSegment } from '@angular/router';\nimport { isNotEmpty } from '../shared/empty.util';\nimport { ThemedObjectNotFoundComponent } from './objectnotfound/themed-objectnotfound.component';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      {\n        matcher: urlMatcher,\n        canActivate: [LookupGuard],\n        component: ThemedObjectNotFoundComponent  }\n    ])\n  ],\n  providers: [\n    LookupGuard\n  ]\n})\n\nexport class LookupRoutingModule {\n\n}\n\nexport function urlMatcher(url) {\n  // The expected path is :idType/:id\n  const idType = url[0].path;\n  // Allow for handles that are delimited with a forward slash.\n  const id = url\n    .slice(1)\n    .map((us: UrlSegment) => us.path)\n    .join('/');\n  if (isNotEmpty(idType) && isNotEmpty(id)) {\n    return {\n      consumed: url,\n      posParams: {\n        idType: new UrlSegment(idType, {}),\n        id: new UrlSegment(id, {})\n      }\n    };\n  }\n  return null;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../shared/shared.module';\nimport { LookupRoutingModule } from './lookup-by-id-routing.module';\nimport { ObjectNotFoundComponent } from './objectnotfound/objectnotfound.component';\nimport { DsoRedirectDataService } from '../core/data/dso-redirect-data.service';\nimport { ThemedObjectNotFoundComponent } from './objectnotfound/themed-objectnotfound.component';\n\n@NgModule({\n  imports: [\n    LookupRoutingModule,\n    CommonModule,\n    SharedModule,\n  ],\n  declarations: [\n    ObjectNotFoundComponent,\n    ThemedObjectNotFoundComponent\n  ],\n  providers: [\n    DsoRedirectDataService\n  ]\n})\nexport class LookupIdModule {\n\n}\n","\nimport { Component, ChangeDetectionStrategy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n/**\n * This component representing the `PageNotFound` DSpace page.\n */\n@Component({\n  selector: 'ds-objnotfound',\n  styleUrls: ['./objectnotfound.component.scss'],\n  templateUrl: './objectnotfound.component.html',\n  changeDetection: ChangeDetectionStrategy.Default\n})\nexport class ObjectNotFoundComponent implements OnInit {\n\n  idType: string;\n\n  id: string;\n\n  missingItem: string;\n\n  /**\n   * Initialize instance variables\n   *\n   * @param {AuthService} authservice\n   * @param {ServerResponseService} responseService\n   */\n  constructor(private route: ActivatedRoute) {\n    route.params.subscribe((params) => {\n      this.idType = params.idType;\n      this.id = params.id;\n    });\n  }\n\n  ngOnInit(): void {\n    if (this.idType.startsWith('handle') || this.idType.startsWith('uuid')) {\n      this.missingItem = this.idType + ': ' + this.id;\n    } else {\n      this.missingItem = 'handle: ' + this.idType + '/' + this.id;\n    }\n  }\n\n}\n","<div class=\"object-not-found container\">\n  <h1>{{\"error.identifier\" | translate}}</h1>\n  <h2><small><em>{{missingItem}}</em></small></h2>\n  <br />\n  <p class=\"text-center\">\n    <a routerLink=\"/home\" class=\"btn btn-primary\">{{\"404.link.home-page\" | translate}}</a>\n  </p>\n</div>\n","var map = {\n\t\"./custom/app/lookup-by-id/objectnotfound/objectnotfound.component\": [\n\t\t\"RrNC\",\n\t\t65\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"rPnB\";\nmodule.exports = webpackAsyncContext;"]}