{"version":3,"sources":["webpack:///src/app/core/breadcrumbs/i18n-breadcrumb.resolver.ts","webpack:///src/app/workspaceitems-edit-page/workspaceitems-edit-page-routing.module.ts","webpack:///src/app/workspaceitems-edit-page/workspaceitems-edit-page.module.ts","webpack:///src/app/core/breadcrumbs/i18n-breadcrumbs.service.ts","webpack:///src/app/breadcrumbs/breadcrumb/breadcrumb.model.ts"],"names":["I18nBreadcrumbResolver","constructor","breadcrumbService","resolve","route","state","key","data","breadcrumbKey","Error","url","fullPath","provider","this","WorkspaceitemsEditPageRoutingModule","forChild","path","redirectTo","pathMatch","canActivate","component","breadcrumb","title","WorkspaceitemsEditPageModule","I18nBreadcrumbsService","getBreadcrumbs","Breadcrumb","text"],"mappings":"4FACA,sFAYO,Y,MAAMA,EACXC,YAAsBC,GAAA,KAAAA,oBAStBC,QAAQC,EAA+BC,GACrC,MAAMC,EAAMF,EAAMG,KAAKC,cACvB,GAAI,YAAWF,GACb,MAAM,IAAIG,MAAM,mDAAsDL,EAAMM,IAAM,+CAEpF,MAAMC,EAAW,YAAwBP,GACzC,MAAO,CAAEQ,SAAUC,KAAKX,kBAAmBI,IAAKA,EAAKI,IAAKC,I,6CAhBjDX,GAAsB,+B,sDAAtBA,EAAsB,QAAtBA,EAAsB,qBAFrB,S,GAEP,I,8LCaA,Y,MAAMc,G,6CAAAA,I,kDAAAA,I,sDAlBF,CACP,IAAaC,SAAS,CACpB,CAAEC,KAAM,GAAIC,WAAY,QAASC,UAAW,QAC5C,CACEC,YAAa,CAAC,KACdH,KAAM,WACNI,UAAW,IACXjB,QAAS,CACPkB,WAAY,KAEdd,KAAM,CAAEe,MAAO,wBAAyBd,cAAe,0B,GAQxD,G,gBCRA,Y,MAAMe,G,6CAAAA,I,kDAAAA,I,sDAXF,CACP,EACA,IACA,IACA,Q,GAOG,I,kCClBP,0EAgBO,Y,MAAMC,EAOXC,eAAenB,EAAaI,GAC1B,OAAO,YAAa,CAAC,IAAI,IAAWJ,EAhBE,eAgBgCI,M,6CAR7Dc,I,sDAAAA,EAAsB,QAAtBA,EAAsB,qBAFrB,S,GAEP,I,oCChBP,kCAGO,MAAME,EACXzB,YAIS0B,EAIAjB,GAJA,KAAAiB,OAIA,KAAAjB","file":"x","sourcesContent":["import { BreadcrumbConfig } from '../../breadcrumbs/breadcrumb/breadcrumb-config.model';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { I18nBreadcrumbsService } from './i18n-breadcrumbs.service';\nimport { hasNoValue } from '../../shared/empty.util';\nimport { currentPathFromSnapshot } from '../../shared/utils/route.utils';\n\n/**\n * The class that resolves a BreadcrumbConfig object with an i18n key string for a route\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class I18nBreadcrumbResolver implements Resolve<BreadcrumbConfig<string>> {\n  constructor(protected breadcrumbService: I18nBreadcrumbsService) {\n  }\n\n  /**\n   * Method for resolving an I18n breadcrumb configuration object\n   * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n   * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n   * @returns BreadcrumbConfig object\n   */\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): BreadcrumbConfig<string> {\n    const key = route.data.breadcrumbKey;\n    if (hasNoValue(key)) {\n      throw new Error('You provided an i18nBreadcrumbResolver for url \\\"' + route.url + '\\\" but no breadcrumbKey in the route\\'s data');\n    }\n    const fullPath = currentPathFromSnapshot(route);\n    return { provider: this.breadcrumbService, key: key, url: fullPath };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { AuthenticatedGuard } from '../core/auth/authenticated.guard';\nimport { ThemedSubmissionEditComponent } from '../submission/edit/themed-submission-edit.component';\nimport { I18nBreadcrumbResolver } from '../core/breadcrumbs/i18n-breadcrumb.resolver';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      { path: '', redirectTo: '/home', pathMatch: 'full' },\n      {\n        canActivate: [AuthenticatedGuard],\n        path: ':id/edit',\n        component: ThemedSubmissionEditComponent,\n        resolve: {\n          breadcrumb: I18nBreadcrumbResolver\n        },\n        data: { title: 'submission.edit.title', breadcrumbKey: 'submission.edit' }\n      }\n    ])\n  ]\n})\n/**\n * This module defines the default component to load when navigating to the workspaceitems edit page path\n */\nexport class WorkspaceitemsEditPageRoutingModule { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/shared.module';\nimport { WorkspaceitemsEditPageRoutingModule } from './workspaceitems-edit-page-routing.module';\nimport { SubmissionModule } from '../submission/submission.module';\n\n@NgModule({\n  imports: [\n    WorkspaceitemsEditPageRoutingModule,\n    CommonModule,\n    SharedModule,\n    SubmissionModule,\n  ],\n  declarations: []\n})\n/**\n * This module handles all modules that need to access the workspaceitems edit page.\n */\nexport class WorkspaceitemsEditPageModule {\n\n}\n","import { Breadcrumb } from '../../breadcrumbs/breadcrumb/breadcrumb.model';\nimport { BreadcrumbsProviderService } from './breadcrumbsProviderService';\nimport { Observable, of as observableOf } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n/**\n * The postfix for i18n breadcrumbs\n */\nexport const BREADCRUMB_MESSAGE_POSTFIX = '.breadcrumbs';\n\n/**\n * Service to calculate i18n breadcrumbs for a single part of the route\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class I18nBreadcrumbsService implements BreadcrumbsProviderService<string> {\n\n  /**\n   * Method to calculate the breadcrumbs\n   * @param key The key used to resolve the breadcrumb\n   * @param url The url to use as a link for this breadcrumb\n   */\n  getBreadcrumbs(key: string, url: string): Observable<Breadcrumb[]> {\n    return observableOf([new Breadcrumb(key + BREADCRUMB_MESSAGE_POSTFIX, url)]);\n  }\n}\n","/**\n * Class representing a single breadcrumb\n */\nexport class Breadcrumb {\n  constructor(\n    /**\n     * The display value of the breadcrumb\n     */\n    public text: string,\n    /**\n     * The optional url of the breadcrumb\n     */\n    public url?: string) {\n  }\n}\n"]}