{"version":3,"sources":["webpack:///src/themes lazy ^\\.\\/.*\\/app\\/statistics\\-page\\/collection\\-statistics\\-page\\/collection\\-statistics\\-page\\.component$ namespace object","webpack:///src/app/core/resolving/resolver.actions.ts","webpack:///src/app/statistics-page/item-statistics-page/item-statistics-page.component.ts","webpack:///src/app/statistics-page/statistics-page/statistics-page.component.html","webpack:///src/app/core/breadcrumbs/i18n-breadcrumb.resolver.ts","webpack:///src/app/statistics-page/collection-statistics-page/collection-statistics-page.component.ts","webpack:///src/themes lazy ^\\.\\/.*\\/app\\/statistics\\-page\\/item\\-statistics\\-page\\/item\\-statistics\\-page\\.component$ namespace object","webpack:///src/app/statistics-page/community-statistics-page/community-statistics-page.component.ts","webpack:///src/app/core/statistics/usage-report-data.service.ts","webpack:///src/app/statistics-page/statistics-table/statistics-table.component.ts","webpack:///src/app/statistics-page/statistics-table/statistics-table.component.html","webpack:///src/themes lazy ^\\.\\/.*\\/app\\/statistics\\-page\\/community\\-statistics\\-page\\/community\\-statistics\\-page\\.component$ namespace object","webpack:///src/app/statistics-page/site-statistics-page/site-statistics-page.component.ts","webpack:///src/app/statistics-page/collection-statistics-page/themed-collection-statistics-page.component.ts","webpack:///src/app/shared/theme-support/themed.component.html","webpack:///src/app/statistics-page/community-statistics-page/themed-community-statistics-page.component.ts","webpack:///src/app/statistics-page/item-statistics-page/themed-item-statistics-page.component.ts","webpack:///src/app/statistics-page/site-statistics-page/themed-site-statistics-page.component.ts","webpack:///src/app/statistics-page/statistics-page.module.ts","webpack:///src/app/core/data/feature-authorization/feature-authorization-guard/statistics-administrator.guard.ts","webpack:///src/app/statistics-page/statistics-page-routing.module.ts","webpack:///src/app/statistics-page/statistics-page/statistics-page.component.ts","webpack:///src/themes lazy ^\\.\\/.*\\/app\\/statistics\\-page\\/site\\-statistics\\-page\\/site\\-statistics\\-page\\.component$ namespace object","webpack:///src/app/item-page/item.resolver.ts","webpack:///src/app/core/breadcrumbs/i18n-breadcrumbs.service.ts","webpack:///src/app/breadcrumbs/breadcrumb/breadcrumb.model.ts"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","ResolverActionTypes","RESOLVED","ResolvedAction","constructor","url","dso","type","this","payload","ItemStatisticsPageComponent","route","router","usageReportService","nameService","authService","super","types","I18nBreadcrumbResolver","breadcrumbService","state","key","data","breadcrumbKey","fullPath","provider","CollectionStatisticsPageComponent","CommunityStatisticsPageComponent","UsageReportService","comparator","halService","http","notificationsService","objectCache","rdbService","requestService","store","linkPath","getStatistic","scope","findById","pipe","searchStatistics","uri","page","size","searchBy","searchParams","fieldName","fieldValue","currentPage","elementsPerPage","list","d","StatisticsTableComponent","dsoService","ngOnInit","hasData","report","points","length","headers","values","getLabel","point","reportType","item","getName","label","SiteStatisticsPageComponent","siteService","getScope$","find","getReports$","scope$","_links","self","href","ThemedCollectionStatisticsPageComponent","getComponentName","importThemedComponent","themeName","importUnthemedComponent","ThemedCommunityStatisticsPageComponent","ThemedItemStatisticsPageComponent","ThemedSiteStatisticsPageComponent","StatisticsPageModule","forRoot","StatisticsAdministratorGuard","authorizationService","getFeatureID","CanViewUsageStatistics","StatisticsPageRoutingModule","forChild","path","breadcrumb","title","children","component","canActivate","StatisticsPageComponent","reports$","hasData$","reports","some","ITEM_PAGE_LINKS_TO_FOLLOW","ItemResolver","itemService","itemRD$","params","g","subscribe","itemRD","dispatch","I18nBreadcrumbsService","getBreadcrumbs","Breadcrumb","text"],"mappings":"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","file":"x","sourcesContent":["var map = {\n\t\"./custom/app/statistics-page/collection-statistics-page/collection-statistics-page.component\": [\n\t\t\"q828\",\n\t\t74\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"2HC7\";\nmodule.exports = webpackAsyncContext;","import { type } from '../../shared/ngrx/type';\nimport { Action } from '@ngrx/store';\nimport { DSpaceObject } from '../shared/dspace-object.model';\n\nexport const ResolverActionTypes = {\n  RESOLVED: type('dspace/resolver/RESOLVED')\n};\n\n/**\n * An action that indicates a route object has been resolved.\n *\n * It isn't used in a reducer for now. Its purpose is to be able to be notified that an object\n * has been resolved in an effect.\n */\nexport class ResolvedAction implements Action {\n  type = ResolverActionTypes.RESOLVED;\n  payload: {\n    url: string,\n    dso: DSpaceObject\n  };\n\n  constructor(url: string, dso: DSpaceObject) {\n    this.payload = { url, dso };\n  }\n}\n\nexport type ResolverAction = ResolvedAction;\n","import { Component } from '@angular/core';\nimport { StatisticsPageComponent } from '../statistics-page/statistics-page.component';\nimport { UsageReportService } from '../../core/statistics/usage-report-data.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Item } from '../../core/shared/item.model';\nimport { DSONameService } from '../../core/breadcrumbs/dso-name.service';\nimport { AuthService } from '../../core/auth/auth.service';\n\n/**\n * Component representing the statistics page for an item.\n */\n@Component({\n  selector: 'ds-item-statistics-page',\n  templateUrl: '../statistics-page/statistics-page.component.html',\n  styleUrls: ['./item-statistics-page.component.scss']\n})\nexport class ItemStatisticsPageComponent extends StatisticsPageComponent<Item> {\n\n  /**\n   * The report types to show on this statistics page.\n   */\n  types: string[] = [\n    'TotalVisits',\n    'TotalVisitsPerMonth',\n    'TotalDownloads',\n    'TopCountries',\n    'TopCities',\n  ];\n\n  constructor(\n    protected route: ActivatedRoute,\n    protected router: Router,\n    protected usageReportService: UsageReportService,\n    protected nameService: DSONameService,\n    protected authService: AuthService\n  ) {\n    super(\n      route,\n      router,\n      usageReportService,\n      nameService,\n      authService,\n    );\n  }\n}\n","<div class=\"container\">\n\n  <ng-container *ngVar=\"(scope$ | async) as scope\">\n    <h2 *ngIf=\"scope\"\n        class=\"header\"\n        id=\"{{ scope.id }}\">\n      {{ 'statistics.header' | translate: { scope: getName(scope) } }}\n    </h2>\n  </ng-container>\n\n  <ng-container *ngVar=\"reports$ | async as reports\">\n\n    <ng-container *ngIf=\"!reports\">\n      <ds-loading></ds-loading>\n    </ng-container>\n\n    <ng-container *ngIf=\"reports\">\n      <ds-statistics-table *ngFor=\"let report of reports\"\n                           [report]=\"report\"\n                           class=\"m-2 {{ report.id }}\">\n      </ds-statistics-table>\n      <div *ngIf=\"!(hasData$ | async)\">\n        {{ 'statistics.page.no-data' | translate }}\n      </div>\n    </ng-container>\n\n  </ng-container>\n\n</div>\n","import { BreadcrumbConfig } from '../../breadcrumbs/breadcrumb/breadcrumb-config.model';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { I18nBreadcrumbsService } from './i18n-breadcrumbs.service';\nimport { hasNoValue } from '../../shared/empty.util';\nimport { currentPathFromSnapshot } from '../../shared/utils/route.utils';\n\n/**\n * The class that resolves a BreadcrumbConfig object with an i18n key string for a route\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class I18nBreadcrumbResolver implements Resolve<BreadcrumbConfig<string>> {\n  constructor(protected breadcrumbService: I18nBreadcrumbsService) {\n  }\n\n  /**\n   * Method for resolving an I18n breadcrumb configuration object\n   * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n   * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n   * @returns BreadcrumbConfig object\n   */\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): BreadcrumbConfig<string> {\n    const key = route.data.breadcrumbKey;\n    if (hasNoValue(key)) {\n      throw new Error('You provided an i18nBreadcrumbResolver for url \\\"' + route.url + '\\\" but no breadcrumbKey in the route\\'s data');\n    }\n    const fullPath = currentPathFromSnapshot(route);\n    return { provider: this.breadcrumbService, key: key, url: fullPath };\n  }\n}\n","import { Component } from '@angular/core';\nimport { StatisticsPageComponent } from '../statistics-page/statistics-page.component';\nimport { UsageReportService } from '../../core/statistics/usage-report-data.service';\nimport { ActivatedRoute , Router} from '@angular/router';\nimport { Collection } from '../../core/shared/collection.model';\nimport { DSONameService } from '../../core/breadcrumbs/dso-name.service';\nimport { AuthService } from '../../core/auth/auth.service';\n\n/**\n * Component representing the statistics page for a collection.\n */\n@Component({\n  selector: 'ds-collection-statistics-page',\n  templateUrl: '../statistics-page/statistics-page.component.html',\n  styleUrls: ['./collection-statistics-page.component.scss']\n})\nexport class CollectionStatisticsPageComponent extends StatisticsPageComponent<Collection> {\n\n  /**\n   * The report types to show on this statistics page.\n   */\n  types: string[] = [\n    'TotalVisits',\n    'TotalVisitsPerMonth',\n    'TopCountries',\n    'TopCities',\n  ];\n\n  constructor(\n    protected route: ActivatedRoute,\n    protected router: Router,\n    protected usageReportService: UsageReportService,\n    protected nameService: DSONameService,\n    protected authService: AuthService\n  ) {\n    super(\n      route,\n      router,\n      usageReportService,\n      nameService,\n      authService,\n    );\n  }\n}\n","var map = {\n\t\"./custom/app/statistics-page/item-statistics-page/item-statistics-page.component\": [\n\t\t\"u0ua\",\n\t\t76\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"CCQ4\";\nmodule.exports = webpackAsyncContext;","import { Component } from '@angular/core';\nimport { StatisticsPageComponent } from '../statistics-page/statistics-page.component';\nimport { UsageReportService } from '../../core/statistics/usage-report-data.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Community } from '../../core/shared/community.model';\nimport { DSONameService } from '../../core/breadcrumbs/dso-name.service';\nimport { AuthService } from '../../core/auth/auth.service';\n\n/**\n * Component representing the statistics page for a community.\n */\n@Component({\n  selector: 'ds-community-statistics-page',\n  templateUrl: '../statistics-page/statistics-page.component.html',\n  styleUrls: ['./community-statistics-page.component.scss']\n})\nexport class CommunityStatisticsPageComponent extends StatisticsPageComponent<Community> {\n\n  /**\n   * The report types to show on this statistics page.\n   */\n  types: string[] = [\n    'TotalVisits',\n    'TotalVisitsPerMonth',\n    'TopCountries',\n    'TopCities',\n  ];\n\n  constructor(\n    protected route: ActivatedRoute,\n    protected router: Router,\n    protected usageReportService: UsageReportService,\n    protected nameService: DSONameService,\n    protected authService: AuthService,\n  ) {\n    super(\n      route,\n      router,\n      usageReportService,\n      nameService,\n      authService,\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { NotificationsService } from '../../shared/notifications/notifications.service';\nimport { dataService } from '../cache/builders/build-decorators';\nimport { RemoteDataBuildService } from '../cache/builders/remote-data-build.service';\nimport { ObjectCacheService } from '../cache/object-cache.service';\nimport { CoreState } from '../core.reducers';\nimport { HALEndpointService } from '../shared/hal-endpoint.service';\nimport { DataService } from '../data/data.service';\nimport { RequestService } from '../data/request.service';\nimport { DefaultChangeAnalyzer } from '../data/default-change-analyzer.service';\nimport { USAGE_REPORT } from './models/usage-report.resource-type';\nimport { UsageReport } from './models/usage-report.model';\nimport { Observable } from 'rxjs';\nimport { getRemoteDataPayload, getFirstSucceededRemoteData } from '../shared/operators';\nimport { map } from 'rxjs/operators';\n\n/**\n * A service to retrieve {@link UsageReport}s from the REST API\n */\n@Injectable()\n@dataService(USAGE_REPORT)\nexport class UsageReportService extends DataService<UsageReport> {\n\n  protected linkPath = 'usagereports';\n\n  constructor(\n    protected comparator: DefaultChangeAnalyzer<UsageReport>,\n    protected halService: HALEndpointService,\n    protected http: HttpClient,\n    protected notificationsService: NotificationsService,\n    protected objectCache: ObjectCacheService,\n    protected rdbService: RemoteDataBuildService,\n    protected requestService: RequestService,\n    protected store: Store<CoreState>,\n  ) {\n    super();\n  }\n\n  getStatistic(scope: string, type: string): Observable<UsageReport> {\n    return this.findById(`${scope}_${type}`).pipe(\n      getFirstSucceededRemoteData(),\n      getRemoteDataPayload(),\n    );\n  }\n\n  searchStatistics(uri: string, page: number, size: number): Observable<UsageReport[]> {\n    return this.searchBy('object', {\n      searchParams: [{\n        fieldName: `uri`,\n        fieldValue: uri,\n      }],\n      currentPage: page,\n      elementsPerPage: size,\n    }, true, false).pipe(\n      getFirstSucceededRemoteData(),\n      getRemoteDataPayload(),\n      map((list) => list.page),\n    );\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Point, UsageReport } from '../../core/statistics/models/usage-report.model';\nimport { Observable, of } from 'rxjs';\nimport { DSONameService } from '../../core/breadcrumbs/dso-name.service';\nimport { map } from 'rxjs/operators';\nimport { getRemoteDataPayload, getFirstSucceededRemoteData } from '../../core/shared/operators';\nimport { DSpaceObjectDataService } from '../../core/data/dspace-object-data.service';\n\n/**\n * Component representing a statistics table for a given usage report.\n */\n@Component({\n  selector: 'ds-statistics-table',\n  templateUrl: './statistics-table.component.html',\n  styleUrls: ['./statistics-table.component.scss']\n})\nexport class StatisticsTableComponent implements OnInit {\n\n  /**\n   * The usage report to display a statistics table for\n   */\n  @Input()\n  report: UsageReport;\n\n  /**\n   * Boolean indicating whether the usage report has data\n   */\n  hasData: boolean;\n\n  /**\n   * The table headers\n   */\n  headers: string[];\n\n  constructor(\n    protected dsoService: DSpaceObjectDataService,\n    protected nameService: DSONameService,\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.hasData = this.report.points.length > 0;\n    if (this.hasData) {\n      this.headers = Object.keys(this.report.points[0].values);\n    }\n  }\n\n  /**\n   * Get the row label to display for a statistics point.\n   * @param point the statistics point to get the label for\n   */\n  getLabel(point: Point): Observable<string> {\n    switch (this.report.reportType) {\n      case 'TotalVisits':\n        return this.dsoService.findById(point.id).pipe(\n          getFirstSucceededRemoteData(),\n          getRemoteDataPayload(),\n          map((item) => this.nameService.getName(item)),\n        );\n      case 'TopCities':\n      case 'topCountries':\n      default:\n        return of(point.label);\n    }\n  }\n}\n","<div *ngIf=\"hasData\"\n     class=\"m-1\">\n\n  <h3 class=\"m-1\">\n    {{ 'statistics.table.title.' + report.reportType | translate }}\n  </h3>\n\n  <table class=\"table table-striped\">\n\n    <tbody>\n\n    <tr>\n      <th scope=\"col\"></th>\n      <th scope=\"col\"\n          *ngFor=\"let header of headers\"\n          class=\"{{header}}-header\">\n        {{ header }}\n      </th>\n    </tr>\n\n    <tr *ngFor=\"let point of report.points\"\n        class=\"{{point.id}}-data\">\n      <th scope=\"row\">\n        {{ getLabel(point) | async }}\n      </th>\n      <td *ngFor=\"let header of headers\"\n          class=\"{{point.id}}-{{header}}-data\">\n        {{ point.values[header] }}\n      </td>\n    </tr>\n\n    </tbody>\n\n  </table>\n\n</div>\n","var map = {\n\t\"./custom/app/statistics-page/community-statistics-page/community-statistics-page.component\": [\n\t\t\"rc4Z\",\n\t\t75\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"PkBe\";\nmodule.exports = webpackAsyncContext;","import { Component } from '@angular/core';\nimport { StatisticsPageComponent } from '../statistics-page/statistics-page.component';\nimport { SiteDataService } from '../../core/data/site-data.service';\nimport { UsageReportService } from '../../core/statistics/usage-report-data.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Site } from '../../core/shared/site.model';\nimport { DSONameService } from '../../core/breadcrumbs/dso-name.service';\nimport { switchMap } from 'rxjs/operators';\nimport { AuthService } from '../../core/auth/auth.service';\n\n/**\n * Component representing the site-wide statistics page.\n */\n@Component({\n  selector: 'ds-site-statistics-page',\n  templateUrl: '../statistics-page/statistics-page.component.html',\n  styleUrls: ['./site-statistics-page.component.scss']\n})\nexport class SiteStatisticsPageComponent extends StatisticsPageComponent<Site> {\n\n  /**\n   * The report types to show on this statistics page.\n   */\n  types: string[] = [\n    'TotalVisits',\n  ];\n\n  constructor(\n    protected route: ActivatedRoute,\n    protected router: Router,\n    protected usageReportService: UsageReportService,\n    protected nameService: DSONameService,\n    protected siteService: SiteDataService,\n    protected authService: AuthService,\n  ) {\n    super(\n      route,\n      router,\n      usageReportService,\n      nameService,\n      authService,\n    );\n  }\n\n  protected getScope$() {\n    return this.siteService.find();\n  }\n\n  protected getReports$() {\n    return this.scope$.pipe(\n      switchMap((scope) =>\n        this.usageReportService.searchStatistics(scope._links.self.href, 0, 10),\n      ),\n    );\n  }\n}\n","import { Component } from '@angular/core';\nimport { ThemedComponent } from '../../shared/theme-support/themed.component';\nimport { CollectionStatisticsPageComponent } from './collection-statistics-page.component';\n\n/**\n * Themed wrapper for CollectionStatisticsPageComponent\n */\n@Component({\n  selector: 'ds-themed-collection-statistics-page',\n  styleUrls: [],\n  templateUrl: '../../shared/theme-support/themed.component.html',\n})\nexport class ThemedCollectionStatisticsPageComponent extends ThemedComponent<CollectionStatisticsPageComponent> {\n  protected getComponentName(): string {\n    return 'CollectionStatisticsPageComponent';\n  }\n\n  protected importThemedComponent(themeName: string): Promise<any> {\n    return import(`../../../themes/${themeName}/app/statistics-page/collection-statistics-page/collection-statistics-page.component`);\n  }\n\n  protected importUnthemedComponent(): Promise<any> {\n    return import(`./collection-statistics-page.component`);\n  }\n\n}\n","<ng-template #vcr></ng-template>\n","import { Component } from '@angular/core';\nimport { ThemedComponent } from '../../shared/theme-support/themed.component';\nimport { CommunityStatisticsPageComponent } from './community-statistics-page.component';\n\n/**\n * Themed wrapper for CommunityStatisticsPageComponent\n */\n@Component({\n  selector: 'ds-themed-collection-statistics-page',\n  styleUrls: [],\n  templateUrl: '../../shared/theme-support/themed.component.html',\n})\nexport class ThemedCommunityStatisticsPageComponent extends ThemedComponent<CommunityStatisticsPageComponent> {\n  protected getComponentName(): string {\n    return 'CommunityStatisticsPageComponent';\n  }\n\n  protected importThemedComponent(themeName: string): Promise<any> {\n    return import(`../../../themes/${themeName}/app/statistics-page/community-statistics-page/community-statistics-page.component`);\n  }\n\n  protected importUnthemedComponent(): Promise<any> {\n    return import(`./community-statistics-page.component`);\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { ThemedComponent } from '../../shared/theme-support/themed.component';\nimport { ItemStatisticsPageComponent } from './item-statistics-page.component';\n\n/**\n * Themed wrapper for ItemStatisticsPageComponent\n */\n@Component({\n  selector: 'ds-themed-item-statistics-page',\n  styleUrls: [],\n  templateUrl: '../../shared/theme-support/themed.component.html',\n})\nexport class ThemedItemStatisticsPageComponent extends ThemedComponent<ItemStatisticsPageComponent> {\n  protected getComponentName(): string {\n    return 'ItemStatisticsPageComponent';\n  }\n\n  protected importThemedComponent(themeName: string): Promise<any> {\n    return import(`../../../themes/${themeName}/app/statistics-page/item-statistics-page/item-statistics-page.component`);\n  }\n\n  protected importUnthemedComponent(): Promise<any> {\n    return import(`./item-statistics-page.component`);\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { ThemedComponent } from '../../shared/theme-support/themed.component';\nimport { SiteStatisticsPageComponent } from './site-statistics-page.component';\n\n/**\n * Themed wrapper for SiteStatisticsPageComponent\n */\n@Component({\n  selector: 'ds-themed-site-statistics-page',\n  styleUrls: [],\n  templateUrl: '../../shared/theme-support/themed.component.html',\n})\nexport class ThemedSiteStatisticsPageComponent extends ThemedComponent<SiteStatisticsPageComponent> {\n  protected getComponentName(): string {\n    return 'SiteStatisticsPageComponent';\n  }\n\n  protected importThemedComponent(themeName: string): Promise<any> {\n    return import(`../../../themes/${themeName}/app/statistics-page/site-statistics-page/site-statistics-page.component`);\n  }\n\n  protected importUnthemedComponent(): Promise<any> {\n    return import(`./site-statistics-page.component`);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CoreModule } from '../core/core.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { StatisticsModule } from '../statistics/statistics.module';\nimport { UsageReportService } from '../core/statistics/usage-report-data.service';\nimport { SiteStatisticsPageComponent } from './site-statistics-page/site-statistics-page.component';\nimport { StatisticsTableComponent } from './statistics-table/statistics-table.component';\nimport { ItemStatisticsPageComponent } from './item-statistics-page/item-statistics-page.component';\nimport { CollectionStatisticsPageComponent } from './collection-statistics-page/collection-statistics-page.component';\nimport { CommunityStatisticsPageComponent } from './community-statistics-page/community-statistics-page.component';\nimport { ThemedCollectionStatisticsPageComponent } from './collection-statistics-page/themed-collection-statistics-page.component';\nimport { ThemedCommunityStatisticsPageComponent } from './community-statistics-page/themed-community-statistics-page.component';\nimport { ThemedItemStatisticsPageComponent } from './item-statistics-page/themed-item-statistics-page.component';\nimport { ThemedSiteStatisticsPageComponent } from './site-statistics-page/themed-site-statistics-page.component';\n\nconst components = [\n  StatisticsTableComponent,\n  SiteStatisticsPageComponent,\n  ItemStatisticsPageComponent,\n  CollectionStatisticsPageComponent,\n  CommunityStatisticsPageComponent,\n  ThemedCollectionStatisticsPageComponent,\n  ThemedCommunityStatisticsPageComponent,\n  ThemedItemStatisticsPageComponent,\n  ThemedSiteStatisticsPageComponent\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    CoreModule.forRoot(),\n    StatisticsModule.forRoot()\n  ],\n  declarations: components,\n  providers: [\n    UsageReportService,\n  ],\n  exports: components\n})\n\n/**\n * This module handles all components and pipes that are necessary for the search page\n */\nexport class StatisticsPageModule {\n}\n","import { Injectable } from '@angular/core';\nimport { SingleFeatureAuthorizationGuard } from './single-feature-authorization.guard';\nimport { AuthorizationDataService } from '../authorization-data.service';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\nimport { AuthService } from '../../../auth/auth.service';\nimport { Observable, of as observableOf } from 'rxjs';\nimport { FeatureID } from '../feature-id';\n\n/**\n * Prevent unauthorized activating and loading of routes when the current authenticated user doesn't have group\n * management rights\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class StatisticsAdministratorGuard extends SingleFeatureAuthorizationGuard {\n    constructor(protected authorizationService: AuthorizationDataService, protected router: Router, protected authService: AuthService) {\n        super(authorizationService, router, authService);\n    }\n\n    /**\n     * Check group management rights\n     */\n    getFeatureID(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<FeatureID> {\n        return observableOf(FeatureID.CanViewUsageStatistics);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nBreadcrumbResolver } from '../core/breadcrumbs/i18n-breadcrumb.resolver';\nimport { I18nBreadcrumbsService } from '../core/breadcrumbs/i18n-breadcrumbs.service';\nimport { StatisticsPageModule } from './statistics-page.module';\nimport { CollectionPageResolver } from '../collection-page/collection-page.resolver';\nimport { CommunityPageResolver } from '../community-page/community-page.resolver';\nimport { ThemedCollectionStatisticsPageComponent } from './collection-statistics-page/themed-collection-statistics-page.component';\nimport { ThemedCommunityStatisticsPageComponent } from './community-statistics-page/themed-community-statistics-page.component';\nimport { ThemedItemStatisticsPageComponent } from './item-statistics-page/themed-item-statistics-page.component';\nimport { ThemedSiteStatisticsPageComponent } from './site-statistics-page/themed-site-statistics-page.component';\nimport { ItemResolver } from '../item-page/item.resolver';\nimport { StatisticsAdministratorGuard } from '../core/data/feature-authorization/feature-authorization-guard/statistics-administrator.guard';\n\n@NgModule({\n  imports: [\n    StatisticsPageModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        resolve: {\n          breadcrumb: I18nBreadcrumbResolver\n        },\n        data: {\n          title: 'statistics.title',\n          breadcrumbKey: 'statistics'\n        },\n        children: [\n          {\n            path: '',\n            component: ThemedSiteStatisticsPageComponent,\n          },\n        ],\n        canActivate: [StatisticsAdministratorGuard]\n      },\n      {\n        path: `items/:id`,\n        resolve: {\n          scope: ItemResolver,\n          breadcrumb: I18nBreadcrumbResolver\n        },\n        data: {\n          title: 'statistics.title',\n          breadcrumbKey: 'statistics'\n        },\n        component: ThemedItemStatisticsPageComponent,\n        canActivate: [StatisticsAdministratorGuard]\n      },\n      {\n        path: `collections/:id`,\n        resolve: {\n          scope: CollectionPageResolver,\n          breadcrumb: I18nBreadcrumbResolver\n        },\n        data: {\n          title: 'statistics.title',\n          breadcrumbKey: 'statistics'\n        },\n        component: ThemedCollectionStatisticsPageComponent,\n        canActivate: [StatisticsAdministratorGuard]\n      },\n      {\n        path: `communities/:id`,\n        resolve: {\n          scope: CommunityPageResolver,\n          breadcrumb: I18nBreadcrumbResolver\n        },\n        data: {\n          title: 'statistics.title',\n          breadcrumbKey: 'statistics'\n        },\n        component: ThemedCommunityStatisticsPageComponent,\n        canActivate: [StatisticsAdministratorGuard]\n      },\n    ]\n    )\n  ],\n  providers: [\n    I18nBreadcrumbResolver,\n    I18nBreadcrumbsService,\n    CollectionPageResolver,\n    CommunityPageResolver,\n    ItemResolver\n  ]\n})\nexport class StatisticsPageRoutingModule {\n}\n","import { Component, OnInit } from '@angular/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { UsageReportService } from '../../core/statistics/usage-report-data.service';\nimport { map, switchMap } from 'rxjs/operators';\nimport { UsageReport } from '../../core/statistics/models/usage-report.model';\nimport { RemoteData } from '../../core/data/remote-data';\nimport {\n  getRemoteDataPayload,\n  getFirstSucceededRemoteData,\n  redirectOn4xx\n} from '../../core/shared/operators';\nimport { DSpaceObject } from '../../core/shared/dspace-object.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DSONameService } from '../../core/breadcrumbs/dso-name.service';\nimport { AuthService } from '../../core/auth/auth.service';\n\n/**\n * Class representing an abstract statistics page component.\n */\n@Component({\n  selector: 'ds-statistics-page',\n  template: ''\n})\nexport abstract class StatisticsPageComponent<T extends DSpaceObject> implements OnInit {\n\n  /**\n   * The scope dso for this statistics page, as an Observable.\n   */\n  scope$: Observable<DSpaceObject>;\n\n  /**\n   * The report types to show on this statistics page.\n   */\n  types: string[];\n\n  /**\n   * The usage report types to show on this statistics page, as an Observable list.\n   */\n  reports$: Observable<UsageReport[]>;\n\n  hasData$: Observable<boolean>;\n\n  constructor(\n    protected route: ActivatedRoute,\n    protected router: Router,\n    protected usageReportService: UsageReportService,\n    protected nameService: DSONameService,\n    protected authService: AuthService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.scope$ = this.getScope$();\n    this.reports$ = this.getReports$();\n    this.hasData$ = this.reports$.pipe(\n      map((reports) => reports.some(\n        (report) => report.points.length > 0\n      )),\n    );\n  }\n\n  /**\n   * Get the scope dso for this statistics page, as an Observable.\n   */\n  protected getScope$(): Observable<DSpaceObject> {\n    return this.route.data.pipe(\n      map((data) => data.scope as RemoteData<T>),\n      redirectOn4xx(this.router, this.authService),\n      getFirstSucceededRemoteData(),\n      getRemoteDataPayload(),\n    );\n  }\n\n  /**\n   * Get the usage reports for this statistics page, as an Observable list\n   */\n  protected getReports$(): Observable<UsageReport[]> {\n    return this.scope$.pipe(\n      switchMap((scope) =>\n        combineLatest(\n          this.types.map((type) => this.usageReportService.getStatistic(scope.id, type))\n        ),\n      ),\n    );\n  }\n\n  /**\n   * Get the name of the scope dso.\n   * @param scope the scope dso to get the name for\n   */\n  getName(scope: DSpaceObject): string {\n    return this.nameService.getName(scope);\n  }\n}\n","var map = {\n\t\"./custom/app/statistics-page/site-statistics-page/site-statistics-page.component\": [\n\t\t\"tHLB\",\n\t\t77\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"hsTn\";\nmodule.exports = webpackAsyncContext;","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { RemoteData } from '../core/data/remote-data';\nimport { ItemDataService } from '../core/data/item-data.service';\nimport { Item } from '../core/shared/item.model';\nimport { followLink, FollowLinkConfig } from '../shared/utils/follow-link-config.model';\nimport { getFirstCompletedRemoteData } from '../core/shared/operators';\nimport { Store } from '@ngrx/store';\nimport { ResolvedAction } from '../core/resolving/resolver.actions';\n\n/**\n * The self links defined in this list are expected to be requested somewhere in the near future\n * Requesting them as embeds will limit the number of requests\n */\nexport const ITEM_PAGE_LINKS_TO_FOLLOW: FollowLinkConfig<Item>[] = [\n  followLink('owningCollection', {},\n    followLink('parentCommunity', {},\n      followLink('parentCommunity'))\n  ),\n  followLink('relationships'),\n  followLink('version', {}, followLink('versionhistory')),\n  followLink('thumbnail')\n];\n\n/**\n * This class represents a resolver that requests a specific item before the route is activated\n */\n@Injectable()\nexport class ItemResolver implements Resolve<RemoteData<Item>> {\n  constructor(\n    protected itemService: ItemDataService,\n    protected store: Store<any>,\n    protected router: Router\n  ) {\n  }\n\n  /**\n   * Method for resolving an item based on the parameters in the current route\n   * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n   * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n   * @returns Observable<<RemoteData<Item>> Emits the found item based on the parameters in the current route,\n   * or an error if something went wrong\n   */\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<RemoteData<Item>> {\n    const itemRD$ = this.itemService.findById(route.params.id,\n      true,\n      false,\n      ...ITEM_PAGE_LINKS_TO_FOLLOW\n    ).pipe(\n      getFirstCompletedRemoteData(),\n    );\n\n    itemRD$.subscribe((itemRD: RemoteData<Item>) => {\n      this.store.dispatch(new ResolvedAction(state.url, itemRD.payload));\n    });\n\n    return itemRD$;\n  }\n}\n","import { Breadcrumb } from '../../breadcrumbs/breadcrumb/breadcrumb.model';\nimport { BreadcrumbsProviderService } from './breadcrumbsProviderService';\nimport { Observable, of as observableOf } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n/**\n * The postfix for i18n breadcrumbs\n */\nexport const BREADCRUMB_MESSAGE_POSTFIX = '.breadcrumbs';\n\n/**\n * Service to calculate i18n breadcrumbs for a single part of the route\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class I18nBreadcrumbsService implements BreadcrumbsProviderService<string> {\n\n  /**\n   * Method to calculate the breadcrumbs\n   * @param key The key used to resolve the breadcrumb\n   * @param url The url to use as a link for this breadcrumb\n   */\n  getBreadcrumbs(key: string, url: string): Observable<Breadcrumb[]> {\n    return observableOf([new Breadcrumb(key + BREADCRUMB_MESSAGE_POSTFIX, url)]);\n  }\n}\n","/**\n * Class representing a single breadcrumb\n */\nexport class Breadcrumb {\n  constructor(\n    /**\n     * The display value of the breadcrumb\n     */\n    public text: string,\n    /**\n     * The optional url of the breadcrumb\n     */\n    public url?: string) {\n  }\n}\n"]}