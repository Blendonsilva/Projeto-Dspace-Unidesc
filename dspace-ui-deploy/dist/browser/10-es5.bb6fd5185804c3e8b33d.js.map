{"version":3,"sources":["webpack:///src/app/item-page/simple/field-components/specific-field/title/item-page-title-field.component.ts","webpack:///src/app/item-page/simple/field-components/specific-field/title/item-page-title-field.component.html","webpack:///src/app/core/breadcrumbs/item-breadcrumb.resolver.ts","webpack:///src/app/item-page/version-page/version.resolver.ts","webpack:///src/app/item-page/bitstreams/upload/upload-bitstream.component.html","webpack:///src/app/item-page/bitstreams/upload/upload-bitstream.component.ts","webpack:///src/app/item-page/simple/themed-item-page.component.ts","webpack:///src/app/item-page/version-page/version-page/version-page.component.ts","webpack:///src/app/item-page/item-page-routing.module.ts","webpack:///src/app/shared/theme-support/themed.component.html","webpack:///src/app/item-page/simple/item-types/versioned-item/versioned-item.component.ts","webpack:///src/app/item-page/simple/item-types/untyped-item/untyped-item.component.html","webpack:///src/app/item-page/simple/item-types/untyped-item/untyped-item.component.ts","webpack:///src/app/item-page/item-page.module.ts","webpack:///src/app/item-page/full/themed-full-item-page.component.ts","webpack:///src/themes lazy ^\\.\\/.*\\/app\\/item\\-page\\/simple\\/item\\-page\\.component$ namespace object","webpack:///src/app/item-page/simple/item-page.component.ts","webpack:///src/app/item-page/simple/item-page.component.html","webpack:///src/app/item-page/full/field-components/file-section/full-file-section.component.ts","webpack:///src/app/item-page/full/field-components/file-section/full-file-section.component.html","webpack:///src/themes lazy ^\\.\\/.*\\/app\\/item\\-page\\/full\\/full\\-item\\-page\\.component$ namespace object","webpack:///src/app/item-page/full/full-item-page.component.ts","webpack:///src/app/item-page/full/full-item-page.component.html"],"names":["ItemPageTitleFieldComponent","fields","ItemBreadcrumbResolver","VersionResolver","constructor","breadcrumbService","dataService","super","followLinks","VERSION_PAGE_LINKS_TO_FOLLOW","versionService","store","router","resolve","route","state","versionRD$","this","findById","params","id","pipe","g","subscribe","versionRD","dispatch","url","payload","UploadBitstreamComponent","itemService","bundleService","authService","notificationsService","translate","requestService","uploadFilesOptions","Object","assign","authToken","disableMultipart","itemAlias","NOTIFICATIONS_PREFIX","subs","ngOnInit","itemId","snapshot","entityType","itemRD$","data","map","dso","bundlesRD$","getBundles","selectedBundleId","queryParams","bundle","selectedBundleName","name","setUploadUrl","createBundle","success","instant","bundleNameChange","getBitstreamsEndpoint","take","href","buildAuthHeader","uploaderComponent","ngAfterViewInit","onCompleteItem","bitstream","removeByHrefSubstring","navigate","onUploadError","error","get","onClick","onCancel","getCurrentUrl","ngOnDestroy","filter","subscription","forEach","unsubscribe","ThemedItemPageComponent","VersionPageComponent","ItemPageRoutingModule","getComponentName","importThemedComponent","themeName","importUnthemedComponent","switchMap","version","item","itemRD","hasNoContent","navigateByUrl","skipLocationChange","itemUrl","forChild","path","breadcrumb","runGuardsAndResolvers","children","component","pathMatch","loadChildren","then","m","EditItemPageModule","canActivate","menu","public","active","visible","model","type","LINK","text","link","VersionedItemComponent","modalService","versionHistoryService","translateService","itemVersionShared","workspaceItemDataService","searchService","routeService","onCreateNewVersion","object","versionHref","_links","activeModal","open","findByHref","res","componentInstance","firstVersion","versionNumber","createVersionEvent","summary","createVersion","self","tap","notifyCreateNewVersion","newVersion","newVersionItem","findByItem","uuid","wsItem","UntypedItemComponent","ItemPageModule","StandalonePage","ENTRY_COMPONENTS","static","ngModule","providers","provide","withEntryComponents","forRoot","ThemedFullItemPageComponent","webpackAsyncContext","req","__webpack_require__","o","Promise","e","Error","code","ids","keys","module","exports","ItemPageComponent","items","viewMode","itemPageRoute$","FullFileSectionComponent","bitstreamDataService","paginationService","pageSize","originalOptions","currentPage","licenseOptions","initialize","originals$","getCurrentPagination","options","findAllByItemAndBundleName","elementsPerPage","rd","errorMessage","statusCode","licenses$","hasValuesInBundle","page","clearPagination","FileSectionComponent","FullItemPageComponent","_location","fromWfi","metadata$","metadata","push","wfi","back","sub"],"mappings":"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","file":"x","sourcesContent":["import { Component, Input } from '@angular/core';\n\nimport { Item } from '../../../../../core/shared/item.model';\nimport { ItemPageFieldComponent } from '../item-page-field.component';\n\n@Component({\n    selector: 'ds-item-page-title-field',\n    templateUrl: './item-page-title-field.component.html'\n})\n/**\n * This component is used for displaying the title (dc.title) of an item\n */\nexport class ItemPageTitleFieldComponent extends ItemPageFieldComponent {\n\n    /**\n     * The item to display metadata for\n     */\n    @Input() item: Item;\n\n    /**\n     * Separator string between multiple values of the metadata fields defined\n     * @type {string}\n     */\n    separator: string;\n\n    /**\n     * Fields (schema.element.qualifier) used to render their values.\n     * In this component, we want to display values for metadata 'dc.title'\n     */\n    fields: string[] = [\n        'dc.title'\n    ];\n\n}\n","<h2 class=\"item-page-title-field\">\n  <div *ngIf=\"item.firstMetadataValue('dspace.entity.type') as type\">\n    {{ type.toLowerCase() + '.page.titleprefix' | translate }}\n  </div>\n  <ds-metadata-values [mdValues]=\"item?.allMetadata(fields)\"></ds-metadata-values>\n</h2>\n","import { Injectable } from '@angular/core';\nimport { DSOBreadcrumbsService } from './dso-breadcrumbs.service';\nimport { ItemDataService } from '../data/item-data.service';\nimport { Item } from '../shared/item.model';\nimport { DSOBreadcrumbResolver } from './dso-breadcrumb.resolver';\nimport { FollowLinkConfig } from '../../shared/utils/follow-link-config.model';\nimport { ITEM_PAGE_LINKS_TO_FOLLOW } from '../../item-page/item.resolver';\n\n/**\n * The class that resolves the BreadcrumbConfig object for an Item\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ItemBreadcrumbResolver extends DSOBreadcrumbResolver<Item> {\n  constructor(protected breadcrumbService: DSOBreadcrumbsService, protected dataService: ItemDataService) {\n    super(breadcrumbService, dataService);\n  }\n\n  /**\n   * Method that returns the follow links to already resolve\n   * The self links defined in this list are expected to be requested somewhere in the near future\n   * Requesting them as embeds will limit the number of requests\n   */\n  get followLinks(): FollowLinkConfig<Item>[] {\n    return ITEM_PAGE_LINKS_TO_FOLLOW;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { RemoteData } from '../../core/data/remote-data';\nimport { followLink, FollowLinkConfig } from '../../shared/utils/follow-link-config.model';\nimport { getFirstCompletedRemoteData } from '../../core/shared/operators';\nimport { Store } from '@ngrx/store';\nimport { ResolvedAction } from '../../core/resolving/resolver.actions';\nimport { Version } from '../../core/shared/version.model';\nimport { VersionDataService } from '../../core/data/version-data.service';\n\n/**\n * The self links defined in this list are expected to be requested somewhere in the near future\n * Requesting them as embeds will limit the number of requests\n */\nexport const VERSION_PAGE_LINKS_TO_FOLLOW: FollowLinkConfig<Version>[] = [\n  followLink('item'),\n];\n\n/**\n * This class represents a resolver that requests a specific version before the route is activated\n */\n@Injectable()\nexport class VersionResolver implements Resolve<RemoteData<Version>> {\n  constructor(\n    protected versionService: VersionDataService,\n    protected store: Store<any>,\n    protected router: Router\n  ) {\n  }\n\n  /**\n   * Method for resolving a version based on the parameters in the current route\n   * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n   * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n   * @returns Observable<<RemoteData<Item>> Emits the found item based on the parameters in the current route,\n   * or an error if something went wrong\n   */\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<RemoteData<Version>> {\n    const versionRD$ = this.versionService.findById(route.params.id,\n      true,\n      false,\n      ...VERSION_PAGE_LINKS_TO_FOLLOW\n    ).pipe(\n      getFirstCompletedRemoteData(),\n    );\n\n    versionRD$.subscribe((versionRD: RemoteData<Version>) => {\n      this.store.dispatch(new ResolvedAction(state.url, versionRD.payload));\n    });\n\n    return versionRD$;\n  }\n}\n","<div class=\"container\" *ngVar=\"(bundlesRD$ | async)?.payload?.page as bundles\">\n  <ng-container *ngIf=\"bundles\">\n    <div class=\"row\">\n      <div class=\"col-12 mb-4\">\n        <h2>{{'item.bitstreams.upload.title' | translate}}</h2>\n        <ng-container *ngVar=\"(itemRD$ | async)?.payload as item\">\n          <div *ngIf=\"item\">\n            <span class=\"font-weight-bold\">{{'item.bitstreams.upload.item' | translate}}</span>\n            <span>{{item.name}}</span>\n          </div>\n        </ng-container>\n      </div>\n      <div class=\"col-12\">\n        <label class=\"font-weight-bold\">{{'item.bitstreams.upload.bundle' | translate}}</label>\n        <ds-dso-input-suggestions #f id=\"search-form\"\n                                  [suggestions]=\"bundles\"\n                                  [placeholder]=\"'item.bitstreams.upload.bundle.placeholder' | translate\"\n                                  [action]=\"getCurrentUrl()\"\n                                  [name]=\"'bundle-select'\"\n                                  [debounceTime]=\"50\"\n                                  [(ngModel)]=\"selectedBundleName\"\n                                  (typeSuggestion)=\"bundleNameChange()\"\n                                  (clickSuggestion)=\"onClick($event)\"\n                                  (click)=\"f.open()\"\n                                  ngDefaultControl>\n        </ds-dso-input-suggestions>\n        <button *ngIf=\"!selectedBundleId && selectedBundleName?.length > 0\" class=\"btn btn-success\" (click)=\"createBundle()\">\n          <i class=\"fa fa-plus\"></i> {{ 'item.bitstreams.upload.bundle.new' | translate }}\n        </button>\n        <ds-uploader  class=\"w-100\" *ngIf=\"selectedBundleId\"\n                      [dropMsg]=\"'item.bitstreams.upload.drop-message'\"\n                      [dropOverDocumentMsg]=\"'item.bitstreams.upload.drop-message'\"\n                      [enableDragOverDocument]=\"true\"\n                      [uploadFilesOptions]=\"uploadFilesOptions\"\n                      (onCompleteItem)=\"onCompleteItem($event)\"\n                      (onUploadError)=\"onUploadError()\"></ds-uploader>\n        <button class=\"btn btn-outline-secondary\" (click)=\"onCancel()\">{{'item.bitstreams.upload.cancel' | translate}}</button>\n      </div>\n    </div>\n  </ng-container>\n</div>\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { Item } from '../../../core/shared/item.model';\nimport { map, take } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UploaderOptions } from '../../../shared/uploader/uploader-options.model';\nimport { hasValue, isEmpty, isNotEmpty } from '../../../shared/empty.util';\nimport { ItemDataService } from '../../../core/data/item-data.service';\nimport { AuthService } from '../../../core/auth/auth.service';\nimport { NotificationsService } from '../../../shared/notifications/notifications.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { PaginatedList } from '../../../core/data/paginated-list.model';\nimport { Bundle } from '../../../core/shared/bundle.model';\nimport { BundleDataService } from '../../../core/data/bundle-data.service';\nimport { getFirstSucceededRemoteDataPayload } from '../../../core/shared/operators';\nimport { UploaderComponent } from '../../../shared/uploader/uploader.component';\nimport { RequestService } from '../../../core/data/request.service';\nimport { getBitstreamModuleRoute } from '../../../app-routing-paths';\nimport { getEntityEditRoute } from '../../item-page-routing-paths';\n\n@Component({\n  selector: 'ds-upload-bitstream',\n  templateUrl: './upload-bitstream.component.html'\n})\n/**\n * Page component for uploading a bitstream to an item\n */\nexport class UploadBitstreamComponent implements OnInit, OnDestroy {\n  /**\n   * The file uploader component\n   */\n  @ViewChild(UploaderComponent) uploaderComponent: UploaderComponent;\n\n  /**\n   * The ID of the item to upload a bitstream to\n   */\n  itemId: string;\n\n  /**\n   * The entity type of the item\n   * This is fetched from the current URL and will determine the item's page route\n   */\n  entityType: string;\n\n  /**\n   * The item to upload a bitstream to\n   */\n  itemRD$: Observable<RemoteData<Item>>;\n\n  /**\n   * The item's bundles\n   */\n  bundlesRD$: Observable<RemoteData<PaginatedList<Bundle>>>;\n\n  /**\n   * The ID of the currently selected bundle to upload a bitstream to\n   */\n  selectedBundleId: string;\n\n  /**\n   * The name of the currently selected bundle to upload a bitstream to\n   */\n  selectedBundleName: string;\n\n  /**\n   * The uploader configuration options\n   * @type {UploaderOptions}\n   */\n  uploadFilesOptions: UploaderOptions = Object.assign(new UploaderOptions(), {\n    // URL needs to contain something to not produce any errors. This will be replaced once a bundle has been selected.\n    url: 'placeholder',\n    authToken: null,\n    disableMultipart: false,\n    itemAlias: null\n  });\n\n  /**\n   * The prefix for all i18n notification messages within this component\n   */\n  NOTIFICATIONS_PREFIX = 'item.bitstreams.upload.notifications.';\n\n  /**\n   * Array to track all subscriptions and unsubscribe them onDestroy\n   * @type {Array}\n   */\n  subs: Subscription[] = [];\n\n  constructor(protected route: ActivatedRoute,\n              protected router: Router,\n              protected itemService: ItemDataService,\n              protected bundleService: BundleDataService,\n              protected authService: AuthService,\n              protected notificationsService: NotificationsService,\n              protected translate: TranslateService,\n              protected requestService: RequestService) {\n  }\n\n  /**\n   * Initialize component properties:\n   * itemRD$          Fetched from the current route data (populated by BitstreamPageResolver)\n   * bundlesRD$       List of bundles on the item\n   * selectedBundleId Starts off by checking if the route's queryParams contain a \"bundle\" parameter. If none is found,\n   *                  the ID of the first bundle in the list is selected.\n   * Calls setUploadUrl after setting the selected bundle\n   */\n  ngOnInit(): void {\n    this.itemId = this.route.snapshot.params.id;\n    this.entityType = this.route.snapshot.params['entity-type'];\n    this.itemRD$ = this.route.data.pipe(map((data) => data.dso));\n    this.bundlesRD$ = this.itemService.getBundles(this.itemId);\n    this.selectedBundleId = this.route.snapshot.queryParams.bundle;\n    if (isNotEmpty(this.selectedBundleId)) {\n      this.bundleService.findById(this.selectedBundleId).pipe(\n        getFirstSucceededRemoteDataPayload()\n      ).subscribe((bundle: Bundle) => {\n        this.selectedBundleName = bundle.name;\n      });\n      this.setUploadUrl();\n    }\n  }\n\n  /**\n   * Create a new bundle with the filled in name on the current item\n   */\n  createBundle() {\n    this.itemService.createBundle(this.itemId, this.selectedBundleName).pipe(\n      getFirstSucceededRemoteDataPayload()\n    ).subscribe((bundle: Bundle) => {\n      this.selectedBundleId = bundle.id;\n      this.notificationsService.success(\n        this.translate.instant(this.NOTIFICATIONS_PREFIX + 'bundle.created.title'),\n        this.translate.instant(this.NOTIFICATIONS_PREFIX + 'bundle.created.content')\n      );\n      this.setUploadUrl();\n    });\n  }\n\n  /**\n   * The user changed the bundle name\n   * Reset the bundle ID\n   */\n  bundleNameChange() {\n    this.selectedBundleId = undefined;\n  }\n\n  /**\n   * Set the upload url to match the selected bundle ID\n   */\n  setUploadUrl() {\n    this.bundleService.getBitstreamsEndpoint(this.selectedBundleId).pipe(take(1)).subscribe((href: string) => {\n      this.uploadFilesOptions.url = href;\n      if (isEmpty(this.uploadFilesOptions.authToken)) {\n        this.uploadFilesOptions.authToken = this.authService.buildAuthHeader();\n      }\n      // Re-initialize the uploader component to ensure the latest changes to the options are applied\n      if (this.uploaderComponent) {\n        this.uploaderComponent.ngOnInit();\n        this.uploaderComponent.ngAfterViewInit();\n      }\n    });\n  }\n\n  /**\n   * The request was successful, redirect the user to the new bitstream's edit page\n   * @param bitstream\n   */\n  public onCompleteItem(bitstream) {\n    // Clear cached requests for this bundle's bitstreams to ensure lists on all pages are up-to-date\n    this.bundleService.getBitstreamsEndpoint(this.selectedBundleId).pipe(take(1)).subscribe((href: string) => {\n      this.requestService.removeByHrefSubstring(href);\n    });\n\n    // Bring over the item ID as a query parameter\n    const queryParams = { itemId: this.itemId, entityType: this.entityType };\n    this.router.navigate([getBitstreamModuleRoute(), bitstream.id, 'edit'], { queryParams: queryParams });\n  }\n\n  /**\n   * The request was unsuccessful, display an error notification\n   */\n  public onUploadError() {\n    this.notificationsService.error(null, this.translate.get(this.NOTIFICATIONS_PREFIX + 'upload.failed'));\n  }\n\n  /**\n   * The user selected a bundle from the input suggestions\n   * Set the bundle ID and Name properties, as well as the upload URL\n   * @param bundle\n   */\n  onClick(bundle: Bundle) {\n    this.selectedBundleId = bundle.id;\n    this.selectedBundleName = bundle.name;\n    this.setUploadUrl();\n  }\n\n  /**\n   * When cancel is clicked, navigate back to the item's edit bitstreams page\n   */\n  onCancel() {\n    this.router.navigate([getEntityEditRoute(this.entityType, this.itemId), 'bitstreams']);\n  }\n\n  /**\n   * @returns {string} the current URL\n   */\n  getCurrentUrl() {\n    return this.router.url;\n  }\n\n  /**\n   * Unsubscribe from all open subscriptions when the component is destroyed\n   */\n  ngOnDestroy(): void {\n    this.subs\n      .filter((subscription) => hasValue(subscription))\n      .forEach((subscription) => subscription.unsubscribe());\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { ThemedComponent } from '../../shared/theme-support/themed.component';\nimport { ItemPageComponent } from './item-page.component';\n\n/**\n * Themed wrapper for ItemPageComponent\n */\n@Component({\n  selector: 'ds-themed-item-page',\n  styleUrls: [],\n  templateUrl: './../../shared/theme-support/themed.component.html',\n})\n\nexport class ThemedItemPageComponent extends ThemedComponent<ItemPageComponent> {\n  protected getComponentName(): string {\n    return 'ItemPageComponent';\n  }\n\n  protected importThemedComponent(themeName: string): Promise<any> {\n    return import(`../../../themes/${themeName}/app/item-page/simple/item-page.component`);\n  }\n\n  protected importUnthemedComponent(): Promise<any> {\n    return import(`./item-page.component`);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from '../../../core/auth/auth.service';\nimport { map, switchMap } from 'rxjs/operators';\nimport { getFirstCompletedRemoteData, getFirstSucceededRemoteDataPayload, redirectOn4xx } from '../../../core/shared/operators';\nimport { VersionDataService } from '../../../core/data/version-data.service';\nimport { Version } from '../../../core/shared/version.model';\nimport { Item } from '../../../core/shared/item.model';\nimport { getItemPageRoute } from '../../item-page-routing-paths';\nimport { getPageNotFoundRoute } from '../../../app-routing-paths';\n\n@Component({\n  selector: 'ds-version-page',\n  templateUrl: './version-page.component.html',\n  styleUrls: ['./version-page.component.scss']\n})\nexport class VersionPageComponent implements OnInit {\n\n  versionRD$: Observable<RemoteData<Version>>;\n  itemRD$: Observable<RemoteData<Item>>;\n\n  constructor(\n    protected route: ActivatedRoute,\n    private router: Router,\n    private versionService: VersionDataService,\n    private authService: AuthService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    /* Retrieve version from resolver or redirect on 4xx */\n    this.versionRD$ = this.route.data.pipe(\n      map((data) => data.dso as RemoteData<Version>),\n      redirectOn4xx(this.router, this.authService),\n    );\n\n    /* Retrieve item from version and reroute to item's page or handle missing item */\n    this.versionRD$.pipe(\n      getFirstSucceededRemoteDataPayload(),\n      switchMap((version) => version.item),\n      redirectOn4xx(this.router, this.authService),\n      getFirstCompletedRemoteData(),\n    ).subscribe((itemRD) => {\n      if (itemRD.hasNoContent) {\n        this.router.navigateByUrl(getPageNotFoundRoute(), { skipLocationChange: true });\n      } else {\n        const itemUrl = getItemPageRoute(itemRD.payload);\n        this.router.navigateByUrl(itemUrl);\n      }\n    });\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ItemPageResolver } from './item-page.resolver';\nimport { AuthenticatedGuard } from '../core/auth/authenticated.guard';\nimport { ItemBreadcrumbResolver } from '../core/breadcrumbs/item-breadcrumb.resolver';\nimport { VersionResolver } from './version-page/version.resolver';\nimport { DSOBreadcrumbsService } from '../core/breadcrumbs/dso-breadcrumbs.service';\nimport { LinkService } from '../core/cache/builders/link.service';\nimport { UploadBitstreamComponent } from './bitstreams/upload/upload-bitstream.component';\nimport { ITEM_EDIT_PATH, UPLOAD_BITSTREAM_PATH } from './item-page-routing-paths';\nimport { ItemPageAdministratorGuard } from './item-page-administrator.guard';\nimport { MenuItemType } from '../shared/menu/initial-menus-state';\nimport { LinkMenuItemModel } from '../shared/menu/menu-item/models/link.model';\nimport { ThemedItemPageComponent } from './simple/themed-item-page.component';\nimport { ThemedFullItemPageComponent } from './full/themed-full-item-page.component';\nimport { VersionPageComponent } from './version-page/version-page/version-page.component';\nimport { BitstreamRequestACopyPageComponent } from '../shared/bitstream-request-a-copy-page/bitstream-request-a-copy-page.component';\nimport { REQUEST_COPY_MODULE_PATH } from '../app-routing-paths';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      {\n        path: ':id',\n        resolve: {\n          dso: ItemPageResolver,\n          breadcrumb: ItemBreadcrumbResolver\n        },\n        runGuardsAndResolvers: 'always',\n        children: [\n          {\n            path: '',\n            component: ThemedItemPageComponent,\n            pathMatch: 'full',\n          },\n          {\n            path: 'full',\n            component: ThemedFullItemPageComponent,\n          },\n          {\n            path: ITEM_EDIT_PATH,\n            loadChildren: () => import('./edit-item-page/edit-item-page.module')\n              .then((m) => m.EditItemPageModule),\n          },\n          {\n            path: UPLOAD_BITSTREAM_PATH,\n            component: UploadBitstreamComponent,\n            canActivate: [AuthenticatedGuard]\n          },\n          {\n            path: REQUEST_COPY_MODULE_PATH,\n            component: BitstreamRequestACopyPageComponent,\n          }\n        ],\n        data: {\n          menu: {\n            public: [{\n              id: 'statistics_item_:id',\n              active: true,\n              visible: true,\n              model: {\n                type: MenuItemType.LINK,\n                text: 'menu.section.statistics',\n                link: 'statistics/items/:id/',\n              } as LinkMenuItemModel,\n            }],\n          },\n        },\n      },\n      {\n        path: 'version',\n        children: [\n          {\n            path: ':id',\n            component: VersionPageComponent,\n            resolve: {\n              dso: VersionResolver,\n            },\n          }\n        ],\n      }\n    ])\n  ],\n  providers: [\n    ItemPageResolver,\n    ItemBreadcrumbResolver,\n    DSOBreadcrumbsService,\n    LinkService,\n    ItemPageAdministratorGuard,\n    VersionResolver,\n  ]\n\n})\nexport class ItemPageRoutingModule {\n\n}\n","<ng-template #vcr></ng-template>\n","import { Component } from '@angular/core';\nimport { ItemComponent } from '../shared/item.component';\nimport { ItemVersionsSummaryModalComponent } from '../../../../shared/item/item-versions/item-versions-summary-modal/item-versions-summary-modal.component';\nimport { getFirstCompletedRemoteData, getFirstSucceededRemoteDataPayload } from '../../../../core/shared/operators';\nimport { RemoteData } from '../../../../core/data/remote-data';\nimport { Version } from '../../../../core/shared/version.model';\nimport { switchMap, tap } from 'rxjs/operators';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { VersionHistoryDataService } from '../../../../core/data/version-history-data.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { VersionDataService } from '../../../../core/data/version-data.service';\nimport { ItemVersionsSharedService } from '../../../../shared/item/item-versions/item-versions-shared.service';\nimport { Router } from '@angular/router';\nimport { WorkspaceitemDataService } from '../../../../core/submission/workspaceitem-data.service';\nimport { SearchService } from '../../../../core/shared/search/search.service';\nimport { Item } from '../../../../core/shared/item.model';\nimport { ItemDataService } from '../../../../core/data/item-data.service';\nimport { WorkspaceItem } from '../../../../core/submission/models/workspaceitem.model';\nimport { RouteService } from '../../../../core/services/route.service';\n\n@Component({\n  selector: 'ds-versioned-item',\n  templateUrl: './versioned-item.component.html',\n  styleUrls: ['./versioned-item.component.scss']\n})\nexport class VersionedItemComponent extends ItemComponent {\n\n  constructor(\n    private modalService: NgbModal,\n    private versionHistoryService: VersionHistoryDataService,\n    private translateService: TranslateService,\n    private versionService: VersionDataService,\n    private itemVersionShared: ItemVersionsSharedService,\n    private router: Router,\n    private workspaceItemDataService: WorkspaceitemDataService,\n    private searchService: SearchService,\n    private itemService: ItemDataService,\n    protected routeService: RouteService\n  ) {\n    super(routeService);\n  }\n\n  /**\n   * Open a modal that allows to create a new version starting from the specified item, with optional summary\n   */\n  onCreateNewVersion(): void {\n\n    const item = this.object;\n    const versionHref = item._links.version.href;\n\n    // Open modal\n    const activeModal = this.modalService.open(ItemVersionsSummaryModalComponent);\n\n    // Show current version in modal\n    this.versionService.findByHref(versionHref).pipe(getFirstCompletedRemoteData()).subscribe((res: RemoteData<Version>) => {\n      // if res.hasNoContent then the item is unversioned\n      activeModal.componentInstance.firstVersion = res.hasNoContent;\n      activeModal.componentInstance.versionNumber = (res.hasNoContent ? undefined : res.payload.version);\n    });\n\n    // On createVersionEvent emitted create new version and notify\n    activeModal.componentInstance.createVersionEvent.pipe(\n      switchMap((summary: string) => this.versionHistoryService.createVersion(item._links.self.href, summary)),\n      getFirstCompletedRemoteData(),\n      // show success/failure notification\n      tap((res: RemoteData<Version>) => { this.itemVersionShared.notifyCreateNewVersion(res); }),\n      // get workspace item\n      getFirstSucceededRemoteDataPayload<Version>(),\n      switchMap((newVersion: Version) => this.itemService.findByHref(newVersion._links.item.href)),\n      getFirstSucceededRemoteDataPayload<Item>(),\n      switchMap((newVersionItem: Item) => this.workspaceItemDataService.findByItem(newVersionItem.uuid, true, false)),\n      getFirstSucceededRemoteDataPayload<WorkspaceItem>(),\n    ).subscribe((wsItem) => {\n      const wsiId = wsItem.id;\n      const route = 'workspaceitems/' + wsiId + '/edit';\n      this.router.navigateByUrl(route);\n    });\n\n  }\n}\n","<div class=\"row\" *ngIf=\"iiifEnabled\">\n  <div class=\"col-12\">\n    <ds-mirador-viewer id=\"iiif-viewer\"\n                   [object]=\"object\"\n                   [searchable]=\"iiifSearchEnabled\"\n                   [query]=\"iiifQuery$ | async\">\n    </ds-mirador-viewer>\n  </div>\n</div>\n<div class=\"d-flex flex-row\">\n  <h2 class=\"item-page-title-field mr-auto\">\n    <ds-metadata-values [mdValues]=\"object?.allMetadata(['dc.title'])\"></ds-metadata-values>\n  </h2>\n  <div class=\"pl-2\">\n    <ds-dso-page-version-button (newVersionEvent)=\"onCreateNewVersion()\" [dso]=\"object\"\n                                [tooltipMsgCreate]=\"'item.page.version.create'\"\n                                [tooltipMsgHasDraft]=\"'item.page.version.hasDraft'\"></ds-dso-page-version-button>\n    <ds-dso-page-edit-button [pageRoute]=\"itemPageRoute\" [dso]=\"object\" [tooltipMsg]=\"'item.page.edit'\"></ds-dso-page-edit-button>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col-xs-12 col-md-4\">\n    <ng-container *ngIf=\"!mediaViewer.image\">\n      <ds-metadata-field-wrapper [hideIfNoTextContent]=\"false\">\n        <ds-thumbnail [thumbnail]=\"object?.thumbnail | async\"></ds-thumbnail>\n      </ds-metadata-field-wrapper>\n    </ng-container>\n    <ng-container *ngIf=\"mediaViewer.image\">\n      <ds-media-viewer [item]=\"object\" [videoOptions]=\"mediaViewer.video\"></ds-media-viewer>\n    </ng-container>\n    <ds-themed-item-page-file-section [item]=\"object\"></ds-themed-item-page-file-section>\n    <ds-item-page-date-field [item]=\"object\"></ds-item-page-date-field>\n    <ds-metadata-representation-list class=\"ds-item-page-mixed-author-field\"\n      [parentItem]=\"object\"\n      [itemType]=\"'Person'\"\n      [metadataFields]=\"['dc.contributor.author', 'dc.creator']\"\n      [label]=\"'relationships.isAuthorOf' | translate\">\n    </ds-metadata-representation-list>\n    <ds-generic-item-page-field [item]=\"object\"\n      [fields]=\"['journal.title']\"\n      [label]=\"'item.page.journal-title'\">\n    </ds-generic-item-page-field>\n    <ds-generic-item-page-field [item]=\"object\"\n      [fields]=\"['journal.identifier.issn']\"\n      [label]=\"'item.page.journal-issn'\">\n    </ds-generic-item-page-field>\n    <ds-generic-item-page-field [item]=\"object\"\n      [fields]=\"['journalvolume.identifier.name']\"\n      [label]=\"'item.page.volume-title'\">\n    </ds-generic-item-page-field>\n    <ds-generic-item-page-field [item]=\"object\"\n      [fields]=\"['dc.publisher']\"\n      [label]=\"'item.page.publisher'\">\n    </ds-generic-item-page-field>\n  </div>\n  <div class=\"col-xs-12 col-md-6\">\n    <ds-item-page-abstract-field [item]=\"object\"></ds-item-page-abstract-field>\n    <ds-generic-item-page-field [item]=\"object\"\n      [fields]=\"['dc.description']\"\n      [label]=\"'item.page.description'\">\n    </ds-generic-item-page-field>\n\n    <ds-generic-item-page-field [item]=\"object\"\n      [fields]=\"['dc.subject']\"\n      [separator]=\"','\"\n      [label]=\"'item.page.subject'\">\n    </ds-generic-item-page-field>\n    <ds-generic-item-page-field [item]=\"object\"\n      [fields]=\"['dc.identifier.citation']\"\n      [label]=\"'item.page.citation'\">\n    </ds-generic-item-page-field>\n    <ds-item-page-uri-field [item]=\"object\"\n      [fields]=\"['dc.identifier.uri']\"\n      [label]=\"'item.page.uri'\">\n    </ds-item-page-uri-field>\n    <ds-item-page-collections [item]=\"object\"></ds-item-page-collections>\n    <div>\n      <a class=\"btn btn-outline-primary\" [routerLink]=\"[itemPageRoute + '/full']\" role=\"button\">\n        <i class=\"fas fa-info-circle\"></i> {{\"item.page.link.full\" | translate}}\n      </a>\n    </div>\n  </div>\n</div>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Item } from '../../../../core/shared/item.model';\nimport { ViewMode } from '../../../../core/shared/view-mode.model';\nimport { listableObjectComponent } from '../../../../shared/object-collection/shared/listable-object/listable-object.decorator';\nimport { VersionedItemComponent } from '../versioned-item/versioned-item.component';\n\n/**\n * Component that represents a publication Item page\n */\n\n@listableObjectComponent(Item, ViewMode.StandalonePage)\n@Component({\n  selector: 'ds-untyped-item',\n  styleUrls: ['./untyped-item.component.scss'],\n  templateUrl: './untyped-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UntypedItemComponent extends VersionedItemComponent {\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedModule } from '../shared/shared.module';\n\nimport { ItemPageComponent } from './simple/item-page.component';\nimport { ItemPageRoutingModule } from './item-page-routing.module';\nimport { MetadataUriValuesComponent } from './field-components/metadata-uri-values/metadata-uri-values.component';\nimport { ItemPageAuthorFieldComponent } from './simple/field-components/specific-field/author/item-page-author-field.component';\nimport { ItemPageDateFieldComponent } from './simple/field-components/specific-field/date/item-page-date-field.component';\nimport { ItemPageAbstractFieldComponent } from './simple/field-components/specific-field/abstract/item-page-abstract-field.component';\nimport { ItemPageUriFieldComponent } from './simple/field-components/specific-field/uri/item-page-uri-field.component';\nimport { ItemPageTitleFieldComponent } from './simple/field-components/specific-field/title/item-page-title-field.component';\nimport { ItemPageFieldComponent } from './simple/field-components/specific-field/item-page-field.component';\nimport { CollectionsComponent } from './field-components/collections/collections.component';\nimport { FullItemPageComponent } from './full/full-item-page.component';\nimport { FullFileSectionComponent } from './full/field-components/file-section/full-file-section.component';\nimport { PublicationComponent } from './simple/item-types/publication/publication.component';\nimport { ItemComponent } from './simple/item-types/shared/item.component';\nimport { EditItemPageModule } from './edit-item-page/edit-item-page.module';\nimport { UploadBitstreamComponent } from './bitstreams/upload/upload-bitstream.component';\nimport { StatisticsModule } from '../statistics/statistics.module';\nimport { AbstractIncrementalListComponent } from './simple/abstract-incremental-list/abstract-incremental-list.component';\nimport { UntypedItemComponent } from './simple/item-types/untyped-item/untyped-item.component';\nimport { JournalEntitiesModule } from '../entity-groups/journal-entities/journal-entities.module';\nimport { ResearchEntitiesModule } from '../entity-groups/research-entities/research-entities.module';\nimport { ThemedItemPageComponent } from './simple/themed-item-page.component';\nimport { ThemedFullItemPageComponent } from './full/themed-full-item-page.component';\nimport { MediaViewerComponent } from './media-viewer/media-viewer.component';\nimport { MediaViewerVideoComponent } from './media-viewer/media-viewer-video/media-viewer-video.component';\nimport { MediaViewerImageComponent } from './media-viewer/media-viewer-image/media-viewer-image.component';\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\nimport { MiradorViewerComponent } from './mirador-viewer/mirador-viewer.component';\nimport { VersionPageComponent } from './version-page/version-page/version-page.component';\nimport { VersionedItemComponent } from './simple/item-types/versioned-item/versioned-item.component';\nimport { ThemedFileSectionComponent } from './simple/field-components/file-section/themed-file-section.component';\n\n\nconst ENTRY_COMPONENTS = [\n  // put only entry components that use custom decorator\n  PublicationComponent,\n  UntypedItemComponent\n];\n\nconst DECLARATIONS = [\n  ThemedFileSectionComponent,\n  ItemPageComponent,\n  ThemedItemPageComponent,\n  FullItemPageComponent,\n  ThemedFullItemPageComponent,\n  MetadataUriValuesComponent,\n  ItemPageAuthorFieldComponent,\n  ItemPageDateFieldComponent,\n  ItemPageAbstractFieldComponent,\n  ItemPageUriFieldComponent,\n  ItemPageTitleFieldComponent,\n  ItemPageFieldComponent,\n  CollectionsComponent,\n  FullFileSectionComponent,\n  PublicationComponent,\n  UntypedItemComponent,\n  ItemComponent,\n  UploadBitstreamComponent,\n  AbstractIncrementalListComponent,\n  MediaViewerComponent,\n  MediaViewerVideoComponent,\n  MediaViewerImageComponent,\n  MiradorViewerComponent,\n  VersionPageComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule.withEntryComponents(),\n    ItemPageRoutingModule,\n    EditItemPageModule,\n    StatisticsModule.forRoot(),\n    JournalEntitiesModule.withEntryComponents(),\n    ResearchEntitiesModule.withEntryComponents(),\n    NgxGalleryModule,\n  ],\n  declarations: [\n    ...DECLARATIONS,\n    VersionedItemComponent\n  ],\n  exports: [\n    ...DECLARATIONS\n  ]\n})\nexport class ItemPageModule {\n  /**\n   * NOTE: this method allows to resolve issue with components that using a custom decorator\n   * which are not loaded during SSR otherwise\n   */\n  static withEntryComponents() {\n    return {\n      ngModule: ItemPageModule,\n      providers: ENTRY_COMPONENTS.map((component) => ({provide: component}))\n    };\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { ThemedComponent } from '../../shared/theme-support/themed.component';\nimport { FullItemPageComponent } from './full-item-page.component';\n\n/**\n * Themed wrapper for FullItemPageComponent\n */\n@Component({\n  selector: 'ds-themed-full-item-page',\n  styleUrls: [],\n  templateUrl: './../../shared/theme-support/themed.component.html',\n})\nexport class ThemedFullItemPageComponent extends ThemedComponent<FullItemPageComponent> {\n  protected getComponentName(): string {\n    return 'FullItemPageComponent';\n  }\n\n  protected importThemedComponent(themeName: string): Promise<any> {\n    return import(`../../../themes/${themeName}/app/item-page/full/full-item-page.component`);\n  }\n\n  protected importUnthemedComponent(): Promise<any> {\n    return import(`./full-item-page.component`);\n  }\n}\n","var map = {\n\t\"./custom/app/item-page/simple/item-page.component\": [\n\t\t\"8T8d\",\n\t\t62\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"THHU\";\nmodule.exports = webpackAsyncContext;","import { map } from 'rxjs/operators';\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { Observable } from 'rxjs';\nimport { ItemDataService } from '../../core/data/item-data.service';\nimport { RemoteData } from '../../core/data/remote-data';\n\nimport { Item } from '../../core/shared/item.model';\n\nimport { fadeInOut } from '../../shared/animations/fade';\nimport { getAllSucceededRemoteDataPayload, redirectOn4xx } from '../../core/shared/operators';\nimport { ViewMode } from '../../core/shared/view-mode.model';\nimport { AuthService } from '../../core/auth/auth.service';\nimport { getItemPageRoute } from '../item-page-routing-paths';\n\n/**\n * This component renders a simple item page.\n * The route parameter 'id' is used to request the item it represents.\n * All fields of the item that should be displayed, are defined in its template.\n */\n@Component({\n  selector: 'ds-item-page',\n  styleUrls: ['./item-page.component.scss'],\n  templateUrl: './item-page.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [fadeInOut]\n})\nexport class ItemPageComponent implements OnInit {\n\n  /**\n   * The item's id\n   */\n  id: number;\n\n  /**\n   * The item wrapped in a remote-data object\n   */\n  itemRD$: Observable<RemoteData<Item>>;\n\n  /**\n   * The view-mode we're currently on\n   */\n  viewMode = ViewMode.StandalonePage;\n\n  /**\n   * Route to the item's page\n   */\n  itemPageRoute$: Observable<string>;\n\n  constructor(\n    protected route: ActivatedRoute,\n    private router: Router,\n    private items: ItemDataService,\n    private authService: AuthService,\n  ) { }\n\n  /**\n   * Initialize instance variables\n   */\n  ngOnInit(): void {\n    this.itemRD$ = this.route.data.pipe(\n      map((data) => data.dso as RemoteData<Item>),\n      redirectOn4xx(this.router, this.authService)\n    );\n    this.itemPageRoute$ = this.itemRD$.pipe(\n      getAllSucceededRemoteDataPayload(),\n      map((item) => getItemPageRoute(item))\n    );\n  }\n}\n","<div class=\"container\" *ngVar=\"(itemRD$ | async) as itemRD\">\n  <div class=\"item-page\" *ngIf=\"itemRD?.hasSucceeded\" @fadeInOut>\n    <div *ngIf=\"itemRD?.payload as item\">\n      <ds-item-alerts [item]=\"item\"></ds-item-alerts>\n      <ds-item-versions-notice [item]=\"item\"></ds-item-versions-notice>\n      <ds-view-tracker [object]=\"item\"></ds-view-tracker>\n      <ds-listable-object-component-loader [object]=\"item\" [viewMode]=\"viewMode\"></ds-listable-object-component-loader>\n      <ds-item-versions class=\"mt-2\" [item]=\"item\" [displayActions]=\"false\"></ds-item-versions>\n    </div>\n  </div>\n  <ds-error *ngIf=\"itemRD?.hasFailed\" message=\"{{'error.item' | translate}}\"></ds-error>\n  <ds-loading *ngIf=\"itemRD?.isLoading\" message=\"{{'loading.item' | translate}}\"></ds-loading>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BitstreamDataService } from '../../../../core/data/bitstream-data.service';\n\nimport { Bitstream } from '../../../../core/shared/bitstream.model';\nimport { Item } from '../../../../core/shared/item.model';\nimport { followLink } from '../../../../shared/utils/follow-link-config.model';\nimport { FileSectionComponent } from '../../../simple/field-components/file-section/file-section.component';\nimport { PaginationComponentOptions } from '../../../../shared/pagination/pagination-component-options.model';\nimport { PaginatedList } from '../../../../core/data/paginated-list.model';\nimport { RemoteData } from '../../../../core/data/remote-data';\nimport { switchMap, tap } from 'rxjs/operators';\nimport { NotificationsService } from '../../../../shared/notifications/notifications.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { hasValue, isEmpty } from '../../../../shared/empty.util';\nimport { PaginationService } from '../../../../core/pagination/pagination.service';\n\n/**\n * This component renders the file section of the item\n * inside a 'ds-metadata-field-wrapper' component.\n */\n\n@Component({\n  selector: 'ds-item-page-full-file-section',\n  styleUrls: ['./full-file-section.component.scss'],\n  templateUrl: './full-file-section.component.html'\n})\nexport class FullFileSectionComponent extends FileSectionComponent implements OnInit {\n\n  @Input() item: Item;\n\n  label: string;\n\n  originals$: Observable<RemoteData<PaginatedList<Bitstream>>>;\n  licenses$: Observable<RemoteData<PaginatedList<Bitstream>>>;\n\n  pageSize = 5;\n  originalOptions = Object.assign(new PaginationComponentOptions(), {\n    id: 'obo',\n    currentPage: 1,\n    pageSize: this.pageSize\n  });\n\n  licenseOptions = Object.assign(new PaginationComponentOptions(), {\n    id: 'lbo',\n    currentPage: 1,\n    pageSize: this.pageSize\n  });\n\n  constructor(\n    bitstreamDataService: BitstreamDataService,\n    protected notificationsService: NotificationsService,\n    protected translateService: TranslateService,\n    protected paginationService: PaginationService\n  ) {\n    super(bitstreamDataService, notificationsService, translateService);\n  }\n\n  ngOnInit(): void {\n    this.initialize();\n  }\n\n  initialize(): void {\n    this.originals$ = this.paginationService.getCurrentPagination(this.originalOptions.id, this.originalOptions).pipe(\n      switchMap((options: PaginationComponentOptions) => this.bitstreamDataService.findAllByItemAndBundleName(\n        this.item,\n        'ORIGINAL',\n        {elementsPerPage: options.pageSize, currentPage: options.currentPage},\n        true,\n        true,\n        followLink('format'),\n        followLink('thumbnail'),\n      )),\n      tap((rd: RemoteData<PaginatedList<Bitstream>>) => {\n          if (hasValue(rd.errorMessage)) {\n            this.notificationsService.error(this.translateService.get('file-section.error.header'), `${rd.statusCode} ${rd.errorMessage}`);\n          }\n        }\n      )\n    );\n\n    this.licenses$ = this.paginationService.getCurrentPagination(this.licenseOptions.id, this.licenseOptions).pipe(\n      switchMap((options: PaginationComponentOptions) => this.bitstreamDataService.findAllByItemAndBundleName(\n        this.item,\n        'LICENSE',\n        {elementsPerPage: options.pageSize, currentPage: options.currentPage},\n        true,\n        true,\n        followLink('format'),\n        followLink('thumbnail'),\n      )),\n      tap((rd: RemoteData<PaginatedList<Bitstream>>) => {\n          if (hasValue(rd.errorMessage)) {\n            this.notificationsService.error(this.translateService.get('file-section.error.header'), `${rd.statusCode} ${rd.errorMessage}`);\n          }\n        }\n      )\n    );\n\n  }\n\n  hasValuesInBundle(bundle: PaginatedList<Bitstream>) {\n    return hasValue(bundle) && !isEmpty(bundle.page);\n  }\n\n  ngOnDestroy(): void {\n    this.paginationService.clearPagination(this.originalOptions.id);\n    this.paginationService.clearPagination(this.licenseOptions.id);\n  }\n\n}\n","<ds-metadata-field-wrapper [label]=\"label | translate\">\n    <div *ngVar=\"(originals$ | async)?.payload as originals\">\n        <div *ngIf=\"hasValuesInBundle(originals)\">\n            <h5 class=\"simple-view-element-header\">{{\"item.page.filesection.original.bundle\" | translate}}</h5>\n            <ds-pagination *ngIf=\"originals?.page?.length > 0\"\n                           [hideGear]=\"true\"\n                           [hidePagerWhenSinglePage]=\"true\"\n                           [paginationOptions]=\"originalOptions\"\n                           [pageInfoState]=\"originals\"\n                           [collectionSize]=\"originals?.totalElements\"\n                           [retainScrollPosition]=\"true\">\n\n\n                <div class=\"file-section row mb-3\" *ngFor=\"let file of originals?.page;\">\n                    <div class=\"col-3\">\n                        <ds-thumbnail [thumbnail]=\"(file.thumbnail | async)?.payload\"></ds-thumbnail>\n                    </div>\n                    <div class=\"col-7\">\n                        <dl class=\"row\">\n                            <dt class=\"col-md-4\">{{\"item.page.filesection.name\" | translate}}</dt>\n                            <dd class=\"col-md-8\">{{file.name}}</dd>\n\n                            <dt class=\"col-md-4\">{{\"item.page.filesection.size\" | translate}}</dt>\n                            <dd class=\"col-md-8\">{{(file.sizeBytes) | dsFileSize }}</dd>\n\n\n                            <dt class=\"col-md-4\">{{\"item.page.filesection.format\" | translate}}</dt>\n                            <dd class=\"col-md-8\">{{(file.format | async)?.payload?.description}}</dd>\n\n\n                            <dt class=\"col-md-4\">{{\"item.page.filesection.description\" | translate}}</dt>\n                            <dd class=\"col-md-8\">{{file.firstMetadataValue(\"dc.description\")}}</dd>\n                        </dl>\n                    </div>\n                    <div class=\"col-2\">\n                        <ds-file-download-link [bitstream]=\"file\" [item]=\"item\">\n                            {{\"item.page.filesection.download\" | translate}}\n                        </ds-file-download-link>\n                    </div>\n                </div>\n            </ds-pagination>\n        </div>\n    </div>\n    <div *ngVar=\"(licenses$ | async)?.payload as licenses\">\n        <div *ngIf=\"hasValuesInBundle(licenses)\">\n            <h5 class=\"simple-view-element-header\">{{\"item.page.filesection.license.bundle\" | translate}}</h5>\n            <ds-pagination *ngIf=\"licenses?.page?.length > 0\"\n                           [hideGear]=\"true\"\n                           [hidePagerWhenSinglePage]=\"true\"\n                           [paginationOptions]=\"licenseOptions\"\n                           [pageInfoState]=\"licenses\"\n                           [collectionSize]=\"licenses?.totalElements\"\n                           [retainScrollPosition]=\"true\">\n\n\n                <div class=\"file-section row\" *ngFor=\"let file of licenses?.page;\">\n                    <div class=\"col-3\">\n                        <ds-thumbnail [thumbnail]=\"(file.thumbnail | async)?.payload\"></ds-thumbnail>\n                    </div>\n                    <div class=\"col-7\">\n                        <dl class=\"row\">\n                            <dt class=\"col-md-4\">{{\"item.page.filesection.name\" | translate}}</dt>\n                            <dd class=\"col-md-8\">{{file.name}}</dd>\n\n                            <dt class=\"col-md-4\">{{\"item.page.filesection.size\" | translate}}</dt>\n                            <dd class=\"col-md-8\">{{(file.sizeBytes) | dsFileSize }}</dd>\n\n                            <dt class=\"col-md-4\">{{\"item.page.filesection.format\" | translate}}</dt>\n                            <dd class=\"col-md-8\">{{(file.format | async)?.payload?.description}}</dd>\n\n\n                            <dt class=\"col-md-4\">{{\"item.page.filesection.description\" | translate}}</dt>\n                            <dd class=\"col-md-8\">{{file.firstMetadataValue(\"dc.description\")}}</dd>\n                        </dl>\n                    </div>\n                    <div class=\"col-2\">\n                        <ds-file-download-link [bitstream]=\"file\" [item]=\"item\">\n                            {{\"item.page.filesection.download\" | translate}}\n                        </ds-file-download-link>\n                    </div>\n                </div>\n            </ds-pagination>\n        </div>\n    </div>\n</ds-metadata-field-wrapper>\n","var map = {\n\t\"./custom/app/item-page/full/full-item-page.component\": [\n\t\t\"TgpW\",\n\t\t60\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"puXh\";\nmodule.exports = webpackAsyncContext;","import { filter, map } from 'rxjs/operators';\nimport { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Data, Router } from '@angular/router';\n\nimport { Observable ,  BehaviorSubject } from 'rxjs';\n\nimport { ItemPageComponent } from '../simple/item-page.component';\nimport { MetadataMap } from '../../core/shared/metadata.models';\nimport { ItemDataService } from '../../core/data/item-data.service';\n\nimport { RemoteData } from '../../core/data/remote-data';\nimport { Item } from '../../core/shared/item.model';\n\nimport { fadeInOut } from '../../shared/animations/fade';\nimport { hasValue } from '../../shared/empty.util';\nimport { AuthService } from '../../core/auth/auth.service';\nimport { Location } from '@angular/common';\n\n\n/**\n * This component renders a full item page.\n * The route parameter 'id' is used to request the item it represents.\n */\n\n@Component({\n  selector: 'ds-full-item-page',\n  styleUrls: ['./full-item-page.component.scss'],\n  templateUrl: './full-item-page.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [fadeInOut]\n})\nexport class FullItemPageComponent extends ItemPageComponent implements OnInit, OnDestroy {\n\n  itemRD$: BehaviorSubject<RemoteData<Item>>;\n\n  metadata$: Observable<MetadataMap>;\n\n  /**\n   * True when the itemRD has been originated from its workflowitem, false otherwise.\n   */\n  fromWfi = false;\n\n  subs = [];\n\n  constructor(protected route: ActivatedRoute,\n              router: Router,\n              items: ItemDataService,\n              authService: AuthService,\n              private _location: Location) {\n    super(route, router, items, authService);\n  }\n\n  /*** AoT inheritance fix, will hopefully be resolved in the near future **/\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.metadata$ = this.itemRD$.pipe(\n      map((rd: RemoteData<Item>) => rd.payload),\n      filter((item: Item) => hasValue(item)),\n      map((item: Item) => item.metadata),);\n\n    this.subs.push(this.route.data.subscribe((data: Data) => {\n        this.fromWfi = hasValue(data.wfi);\n      })\n    );\n  }\n\n  /**\n   * Navigate back in browser history.\n   */\n  back() {\n    this._location.back();\n  }\n\n  ngOnDestroy() {\n    this.subs.filter((sub) => hasValue(sub)).forEach((sub) => sub.unsubscribe());\n  }\n}\n","<div class=\"container\" *ngVar=\"(itemRD$ | async) as itemRD\">\n  <div class=\"item-page\" *ngIf=\"itemRD?.hasSucceeded\" @fadeInOut>\n    <div *ngIf=\"itemRD?.payload as item\">\n      <ds-item-alerts [item]=\"item\"></ds-item-alerts>\n      <ds-item-versions-notice [item]=\"item\"></ds-item-versions-notice>\n      <ds-view-tracker [object]=\"item\"></ds-view-tracker>\n      <div class=\"d-flex flex-row\">\n        <ds-item-page-title-field class=\"mr-auto\" [item]=\"item\"></ds-item-page-title-field>\n        <div class=\"pl-2\">\n          <ds-dso-page-edit-button [pageRoute]=\"itemPageRoute$ | async\" [dso]=\"item\" [tooltipMsg]=\"'item.page.edit'\"></ds-dso-page-edit-button>\n        </div>\n      </div>\n      <div class=\"simple-view-link my-3\" *ngIf=\"!fromWfi\">\n        <a class=\"btn btn-outline-primary\" [routerLink]=\"[(itemPageRoute$ | async)]\">\n          {{\"item.page.link.simple\" | translate}}\n        </a>\n      </div>\n      <table class=\"table table-responsive table-striped\">\n        <tbody>\n          <ng-container *ngFor=\"let mdEntry of (metadata$ | async) | keyvalue\">\n            <tr *ngFor=\"let mdValue of mdEntry.value\">\n              <td>{{mdEntry.key}}</td>\n              <td>{{mdValue.value}}</td>\n              <td>{{mdValue.language}}</td>\n            </tr>\n          </ng-container>\n        </tbody>\n      </table>\n      <ds-item-page-full-file-section [item]=\"item\"></ds-item-page-full-file-section>\n      <ds-item-page-collections [item]=\"item\"></ds-item-page-collections>\n      <ds-item-versions class=\"mt-2\" [item]=\"item\"></ds-item-versions>\n      <div class=\"button-row bottom\" *ngIf=\"fromWfi\">\n        <div class=\"text-right\">\n          <button class=\"btn btn-outline-secondary mr-1\" (click)=\"back()\"><i class=\"fas fa-arrow-left\"></i> {{'item.page.return' | translate}}</button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <ds-error *ngIf=\"itemRD?.hasFailed\" message=\"{{'error.item' | translate}}\"></ds-error>\n  <ds-loading *ngIf=\"itemRD?.isLoading\" message=\"{{'loading.item' | translate}}\"></ds-loading>\n</div>\n"]}