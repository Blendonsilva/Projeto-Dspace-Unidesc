{"version":3,"sources":["webpack:///src/themes lazy ^\\.\\/.*\\/app\\/workflowitems\\-edit\\-page\\/workflow\\-item\\-delete\\/workflow\\-item\\-delete\\.component$ namespace object","webpack:///src/app/workflowitems-edit-page/workflow-item-page.resolver.ts","webpack:///src/app/workflowitems-edit-page/workflow-item-delete/themed-workflow-item-delete.component.ts","webpack:///src/app/shared/theme-support/themed.component.html","webpack:///src/app/workflowitems-edit-page/workflow-item-send-back/themed-workflow-item-send-back.component.ts","webpack:///src/app/workflowitems-edit-page/item-from-workflow.resolver.ts","webpack:///src/app/workflowitems-edit-page/workflowitems-edit-page-routing.module.ts","webpack:///src/app/workflowitems-edit-page/workflowitems-edit-page.module.ts","webpack:///src/themes lazy ^\\.\\/.*\\/app\\/workflowitems\\-edit\\-page\\/workflow\\-item\\-send\\-back\\/workflow\\-item\\-send\\-back\\.component$ namespace object","webpack:///src/app/workflowitems-edit-page/workflow-item-action-page.component.ts","webpack:///src/app/workflowitems-edit-page/workflow-item-delete/workflow-item-delete.component.ts","webpack:///src/app/workflowitems-edit-page/workflow-item-action-page.component.html","webpack:///src/app/workflowitems-edit-page/workflow-item-send-back/workflow-item-send-back.component.ts"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","WorkflowItemPageResolver","constructor","workflowItemService","route","state","this","findById","params","pipe","g","ThemedWorkflowItemDeleteComponent","getComponentName","importThemedComponent","themeName","importUnthemedComponent","ThemedWorkflowItemSendBackComponent","ItemFromWorkflowResolver","store","switchMap","wfiRD","payload","item","WorkflowItemsEditPageRoutingModule","forChild","path","wfi","children","canActivate","component","breadcrumb","data","title","breadcrumbKey","dso","WorkflowItemsEditPageModule","ItemPageModule","WorkflowItemActionPageComponent","router","routeService","notificationsService","translationService","ngOnInit","type","getType","wfi$","item$","performAction","sendRequest","subscribe","successful","get","content","success","error","previousPage","getPreviousUrl","url","navigateByUrl","WorkflowItemDeleteComponent","requestService","super","removeByHrefSubstring","delete","response","hasSucceeded","WorkflowItemSendBackComponent","sendBack"],"mappings":"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","file":"x","sourcesContent":["var map = {\n\t\"./custom/app/workflowitems-edit-page/workflow-item-delete/workflow-item-delete.component\": [\n\t\t\"xshI\",\n\t\t81\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"/kFS\";\nmodule.exports = webpackAsyncContext;","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { RemoteData } from '../core/data/remote-data';\nimport { followLink } from '../shared/utils/follow-link-config.model';\nimport { WorkflowItemDataService } from '../core/submission/workflowitem-data.service';\nimport { WorkflowItem } from '../core/submission/models/workflowitem.model';\nimport { getFirstCompletedRemoteData } from '../core/shared/operators';\n\n/**\n * This class represents a resolver that requests a specific workflow item before the route is activated\n */\n@Injectable()\nexport class WorkflowItemPageResolver implements Resolve<RemoteData<WorkflowItem>> {\n  constructor(private workflowItemService: WorkflowItemDataService) {\n  }\n\n  /**\n   * Method for resolving a workflow item based on the parameters in the current route\n   * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n   * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n   * @returns Observable<<RemoteData<Item>> Emits the found workflow item based on the parameters in the current route,\n   * or an error if something went wrong\n   */\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<RemoteData<WorkflowItem>> {\n    return this.workflowItemService.findById(route.params.id,\n      true,\n      false,\n      followLink('item'),\n    ).pipe(\n      getFirstCompletedRemoteData(),\n    );\n  }\n}\n","import { WorkflowItemDeleteComponent } from './workflow-item-delete.component';\nimport { ThemedComponent } from '../../shared/theme-support/themed.component';\nimport { Component } from '@angular/core';\n\n/**\n * Themed wrapper for WorkflowItemDeleteComponent\n */\n\n@Component({\n  selector: 'ds-themed-workflow-item-delete',\n  styleUrls: [],\n  templateUrl: './../../shared/theme-support/themed.component.html'\n})\nexport class ThemedWorkflowItemDeleteComponent extends ThemedComponent<WorkflowItemDeleteComponent> {\n  protected getComponentName(): string {\n    return 'WorkflowItemDeleteComponent';\n  }\n\n  protected importThemedComponent(themeName: string): Promise<any> {\n    return import(`../../../themes/${themeName}/app/workflowitems-edit-page/workflow-item-delete/workflow-item-delete.component`);\n  }\n\n  protected importUnthemedComponent(): Promise<any> {\n    return import(`./workflow-item-delete.component`);\n  }\n}\n","<ng-template #vcr></ng-template>\n","import { ThemedComponent } from '../../shared/theme-support/themed.component';\nimport { Component } from '@angular/core';\nimport { WorkflowItemSendBackComponent } from './workflow-item-send-back.component';\n\n/**\n * Themed wrapper for WorkflowItemActionPageComponent\n */\n\n@Component({\n  selector: 'ds-themed-workflow-item-send-back',\n  styleUrls: [],\n  templateUrl: './../../shared/theme-support/themed.component.html'\n})\nexport class ThemedWorkflowItemSendBackComponent extends ThemedComponent<WorkflowItemSendBackComponent> {\n  protected getComponentName(): string {\n    return 'WorkflowItemSendBackComponent';\n  }\n\n  protected importThemedComponent(themeName: string): Promise<any> {\n    return import(`../../../themes/${themeName}/app/workflowitems-edit-page/workflow-item-send-back/workflow-item-send-back.component`);\n  }\n\n  protected importUnthemedComponent(): Promise<any> {\n    return import(`./workflow-item-send-back.component`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { RemoteData } from '../core/data/remote-data';\nimport { Item } from '../core/shared/item.model';\nimport { followLink } from '../shared/utils/follow-link-config.model';\nimport { getFirstCompletedRemoteData } from '../core/shared/operators';\nimport { Store } from '@ngrx/store';\nimport { WorkflowItemDataService } from '../core/submission/workflowitem-data.service';\nimport { WorkflowItem } from '../core/submission/models/workflowitem.model';\nimport { switchMap } from 'rxjs/operators';\n\n/**\n * This class represents a resolver that requests a specific item before the route is activated\n */\n@Injectable()\nexport class ItemFromWorkflowResolver implements Resolve<RemoteData<Item>> {\n  constructor(\n    private workflowItemService: WorkflowItemDataService,\n    protected store: Store<any>\n  ) {\n  }\n\n  /**\n   * Method for resolving an item based on the parameters in the current route\n   * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n   * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n   * @returns Observable<<RemoteData<Item>> Emits the found item based on the parameters in the current route,\n   * or an error if something went wrong\n   */\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<RemoteData<Item>> {\n    const itemRD$ = this.workflowItemService.findById(route.params.id,\n      true,\n      false,\n      followLink('item'),\n    ).pipe(\n      getFirstCompletedRemoteData(),\n      switchMap((wfiRD: RemoteData<WorkflowItem>) => wfiRD.payload.item as Observable<RemoteData<Item>>),\n      getFirstCompletedRemoteData()\n    );\n    return itemRD$;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { AuthenticatedGuard } from '../core/auth/authenticated.guard';\nimport { WorkflowItemPageResolver } from './workflow-item-page.resolver';\nimport {\n  WORKFLOW_ITEM_DELETE_PATH,\n  WORKFLOW_ITEM_EDIT_PATH,\n  WORKFLOW_ITEM_SEND_BACK_PATH,\n  WORKFLOW_ITEM_VIEW_PATH\n} from './workflowitems-edit-page-routing-paths';\nimport { ThemedSubmissionEditComponent } from '../submission/edit/themed-submission-edit.component';\nimport { ThemedWorkflowItemDeleteComponent } from './workflow-item-delete/themed-workflow-item-delete.component';\nimport { ThemedWorkflowItemSendBackComponent } from './workflow-item-send-back/themed-workflow-item-send-back.component';\nimport { I18nBreadcrumbResolver } from '../core/breadcrumbs/i18n-breadcrumb.resolver';\nimport { ItemFromWorkflowResolver } from './item-from-workflow.resolver';\nimport { ThemedFullItemPageComponent } from '../item-page/full/themed-full-item-page.component';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      {\n        path: ':id',\n        resolve: { wfi: WorkflowItemPageResolver },\n        children: [\n          {\n            canActivate: [AuthenticatedGuard],\n            path: WORKFLOW_ITEM_EDIT_PATH,\n            component: ThemedSubmissionEditComponent,\n            resolve: {\n              breadcrumb: I18nBreadcrumbResolver\n            },\n            data: { title: 'workflow-item.edit.title', breadcrumbKey: 'workflow-item.edit' }\n          },\n          {\n            canActivate: [AuthenticatedGuard],\n            path: WORKFLOW_ITEM_VIEW_PATH,\n            component: ThemedFullItemPageComponent,\n            resolve: {\n              dso: ItemFromWorkflowResolver,\n              breadcrumb: I18nBreadcrumbResolver\n            },\n            data: { title: 'workflow-item.view.title', breadcrumbKey: 'workflow-item.view' }\n          },\n          {\n            canActivate: [AuthenticatedGuard],\n            path: WORKFLOW_ITEM_DELETE_PATH,\n            component: ThemedWorkflowItemDeleteComponent,\n            resolve: {\n              breadcrumb: I18nBreadcrumbResolver\n            },\n            data: { title: 'workflow-item.delete.title', breadcrumbKey: 'workflow-item.edit' }\n          },\n          {\n            canActivate: [AuthenticatedGuard],\n            path: WORKFLOW_ITEM_SEND_BACK_PATH,\n            component: ThemedWorkflowItemSendBackComponent,\n            resolve: {\n              breadcrumb: I18nBreadcrumbResolver\n            },\n            data: { title: 'workflow-item.send-back.title', breadcrumbKey: 'workflow-item.edit' }\n          }\n        ]\n      }]\n    )\n  ],\n  providers: [WorkflowItemPageResolver, ItemFromWorkflowResolver]\n})\n/**\n * This module defines the default component to load when navigating to the workflowitems edit page path.\n */\nexport class WorkflowItemsEditPageRoutingModule {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/shared.module';\nimport { WorkflowItemsEditPageRoutingModule } from './workflowitems-edit-page-routing.module';\nimport { SubmissionModule } from '../submission/submission.module';\nimport { WorkflowItemDeleteComponent } from './workflow-item-delete/workflow-item-delete.component';\nimport { WorkflowItemSendBackComponent } from './workflow-item-send-back/workflow-item-send-back.component';\nimport { ThemedWorkflowItemDeleteComponent } from './workflow-item-delete/themed-workflow-item-delete.component';\nimport { ThemedWorkflowItemSendBackComponent } from './workflow-item-send-back/themed-workflow-item-send-back.component';\nimport { StatisticsModule } from '../statistics/statistics.module';\nimport { ItemPageModule } from '../item-page/item-page.module';\n\n@NgModule({\n  imports: [\n    WorkflowItemsEditPageRoutingModule,\n    CommonModule,\n    SharedModule,\n    SubmissionModule,\n    StatisticsModule,\n    ItemPageModule\n  ],\n  declarations: [\n    WorkflowItemDeleteComponent,\n    ThemedWorkflowItemDeleteComponent,\n    WorkflowItemSendBackComponent,\n    ThemedWorkflowItemSendBackComponent\n  ]\n})\n/**\n * This module handles all modules that need to access the workflowitems edit page.\n */\nexport class WorkflowItemsEditPageModule {\n\n}\n","var map = {\n\t\"./custom/app/workflowitems-edit-page/workflow-item-send-back/workflow-item-send-back.component\": [\n\t\t\"Oc6R\",\n\t\t82\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"2YUx\";\nmodule.exports = webpackAsyncContext;","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, switchMap, take } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport { WorkflowItem } from '../core/submission/models/workflowitem.model';\nimport { Item } from '../core/shared/item.model';\nimport { ActivatedRoute, Data, Router } from '@angular/router';\nimport { WorkflowItemDataService } from '../core/submission/workflowitem-data.service';\nimport { RouteService } from '../core/services/route.service';\nimport { NotificationsService } from '../shared/notifications/notifications.service';\nimport { RemoteData } from '../core/data/remote-data';\nimport { getAllSucceededRemoteData, getRemoteDataPayload } from '../core/shared/operators';\nimport { isEmpty } from '../shared/empty.util';\n\n/**\n * Abstract component representing a page to perform an action on a workflow item\n */\n@Component({\n  selector: 'ds-workflowitem-action-page',\n  template: ''\n})\nexport abstract class WorkflowItemActionPageComponent implements OnInit {\n  public type;\n  public wfi$: Observable<WorkflowItem>;\n  public item$: Observable<Item>;\n\n  constructor(protected route: ActivatedRoute,\n              protected workflowItemService: WorkflowItemDataService,\n              protected router: Router,\n              protected routeService: RouteService,\n              protected notificationsService: NotificationsService,\n              protected translationService: TranslateService) {\n  }\n\n  /**\n   * Sets up the type, workflow item and its item object\n   */\n  ngOnInit() {\n    this.type = this.getType();\n    this.wfi$ = this.route.data.pipe(map((data: Data) => data.wfi as RemoteData<WorkflowItem>), getRemoteDataPayload());\n    this.item$ = this.wfi$.pipe(switchMap((wfi: WorkflowItem) => (wfi.item as Observable<RemoteData<Item>>).pipe(getAllSucceededRemoteData(), getRemoteDataPayload())));\n  }\n\n  /**\n   * Performs the action and shows a notification based on the outcome of the action\n   */\n  performAction() {\n    this.wfi$.pipe(\n      take(1),\n      switchMap((wfi: WorkflowItem) => this.sendRequest(wfi.id))\n    ).subscribe((successful: boolean) => {\n      if (successful) {\n        const title = this.translationService.get('workflow-item.' + this.type + '.notification.success.title');\n        const content = this.translationService.get('workflow-item.' + this.type + '.notification.success.content');\n        this.notificationsService.success(title, content);\n      } else {\n        const title = this.translationService.get('workflow-item.' + this.type + '.notification.error.title');\n        const content = this.translationService.get('workflow-item.' + this.type + '.notification.error.content');\n        this.notificationsService.error(title, content);\n      }\n      this.previousPage();\n    });\n  }\n\n  /**\n   * Navigates to the previous url\n   * If there's not previous url, it continues to the mydspace page instead\n   */\n  previousPage() {\n    this.routeService.getPreviousUrl().pipe(take(1))\n      .subscribe((url) => {\n          if (isEmpty(url)) {\n            url = '/mydspace';\n          }\n          this.router.navigateByUrl(url);\n        }\n      );\n  }\n\n  /**\n   * Performs the action of this workflow item action page\n   * @param id The id of the WorkflowItem\n   */\n  abstract sendRequest(id: string): Observable<boolean>;\n\n  /**\n   * Returns the type of page\n   */\n  abstract getType(): string;\n}\n","import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { WorkflowItemActionPageComponent } from '../workflow-item-action-page.component';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { WorkflowItemDataService } from '../../core/submission/workflowitem-data.service';\nimport { RouteService } from '../../core/services/route.service';\nimport { NotificationsService } from '../../shared/notifications/notifications.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { RequestService } from '../../core/data/request.service';\nimport { map } from 'rxjs/operators';\nimport { RemoteData } from '../../core/data/remote-data';\nimport { NoContent } from '../../core/shared/NoContent.model';\nimport { getFirstCompletedRemoteData } from '../../core/shared/operators';\n\n@Component({\n  selector: 'ds-workflow-item-delete',\n  templateUrl: '../workflow-item-action-page.component.html'\n})\n/**\n * Component representing a page to delete a workflow item\n */\nexport class WorkflowItemDeleteComponent extends WorkflowItemActionPageComponent {\n  constructor(protected route: ActivatedRoute,\n              protected workflowItemService: WorkflowItemDataService,\n              protected router: Router,\n              protected routeService: RouteService,\n              protected notificationsService: NotificationsService,\n              protected translationService: TranslateService,\n              protected requestService: RequestService) {\n    super(route, workflowItemService, router, routeService, notificationsService, translationService);\n  }\n\n  /**\n   * Returns the type of page\n   */\n  getType(): string {\n    return 'delete';\n  }\n\n  /**\n   * Performs the action of this workflow item action page\n   * @param id The id of the WorkflowItem\n   */\n  sendRequest(id: string): Observable<boolean> {\n    this.requestService.removeByHrefSubstring('/discover');\n    return this.workflowItemService.delete(id).pipe(\n      getFirstCompletedRemoteData(),\n      map((response: RemoteData<NoContent>) => response.hasSucceeded)\n    );\n  }\n}\n","<div class=\"container\" *ngVar=\"item$ | async as item\">\n    <h2>{{'workflow-item.' + type + '.header' | translate}}</h2>\n    <ds-modify-item-overview *ngIf=\"item\" [item]=\"item\"></ds-modify-item-overview>\n    <button class=\"btn btn-default\" (click)=\"previousPage()\">{{'workflow-item.' + type + '.button.cancel' | translate}}</button>\n    <button class=\"btn btn-danger\" (click)=\"performAction()\">{{'workflow-item.' + type + '.button.confirm' | translate}}</button>\n</div>\n","import { Component } from '@angular/core';\nimport { WorkflowItemActionPageComponent } from '../workflow-item-action-page.component';\nimport { Observable } from 'rxjs';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { WorkflowItemDataService } from '../../core/submission/workflowitem-data.service';\nimport { RouteService } from '../../core/services/route.service';\nimport { NotificationsService } from '../../shared/notifications/notifications.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { RequestService } from '../../core/data/request.service';\n\n@Component({\n  selector: 'ds-workflow-item-send-back',\n  templateUrl: '../workflow-item-action-page.component.html'\n})\n/**\n * Component representing a page to send back a workflow item to the submitter\n */\nexport class WorkflowItemSendBackComponent extends WorkflowItemActionPageComponent {\n  constructor(protected route: ActivatedRoute,\n              protected workflowItemService: WorkflowItemDataService,\n              protected router: Router,\n              protected routeService: RouteService,\n              protected notificationsService: NotificationsService,\n              protected translationService: TranslateService,\n              protected requestService: RequestService) {\n    super(route, workflowItemService, router, routeService, notificationsService, translationService);\n  }\n\n  /**\n   * Returns the type of page\n   */\n  getType(): string {\n    return 'send-back';\n  }\n\n  /**\n   * Performs the action of this workflow item action page\n   * @param id The id of the WorkflowItem\n   */\n  sendRequest(id: string): Observable<boolean> {\n    this.requestService.removeByHrefSubstring('/discover');\n    return this.workflowItemService.sendBack(id);\n  }\n}\n"]}